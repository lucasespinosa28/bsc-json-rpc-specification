
// Code generated by @open-rpc/generator DO NOT EDIT.
import { RequestManager, PostMessageWindowTransport, PostMessageIframeTransport, WebSocketTransport, HTTPTransport, Client, JSONRPCError } from "@open-rpc/client-js";
import _ from "lodash";
import { OpenrpcDocument as OpenRPC, MethodObject, ContentDescriptorObject } from "@open-rpc/meta-schema";
import { MethodCallValidator, MethodNotFoundError } from "@open-rpc/schema-utils-js";

/**
 *
 * Hex representation of a Keccak 256 hash
 *
 */
export type Keccak = string;
/**
 *
 * Null
 *
 */
export type Null = null;
/**
 *
 * The block hash or null when its the pending block
 *
 */
export type BlockHashOrNull = Keccak | Null;
/**
 *
 * The hex representation of the block's height
 *
 */
export type BlockNumber = string;
/**
 *
 * The block number or null when its the pending block
 *
 */
export type BlockNumberOrNull = BlockNumber | Null;
/**
 *
 * The sender of the transaction
 *
 */
export type From = string;
/**
 *
 * The gas limit provided by the sender in Wei
 *
 */
export type TransactionGas = string;
/**
 *
 * The gas price willing to be paid by the sender in Wei
 *
 */
export type TransactionGasPrice = string;
/**
 *
 * Keccak 256 Hash of the RLP encoding of a transaction
 *
 */
export type TransactionHash = string;
/**
 *
 * The data field sent with the transaction
 *
 */
export type TransactionInput = string;
/**
 *
 * The total number of prior transactions made by the sender
 *
 */
export type TransactionNonce = string;
export type Address = string;
/**
 *
 * Destination address of the transaction. Null if it was a contract create.
 *
 */
export type To = Address | Null;
/**
 *
 * Hex representation of the integer
 *
 */
export type Integer = string;
/**
 *
 * The index of the transaction. null when its pending
 *
 */
export type TransactionIndex = Integer | Null;
/**
 *
 * Value of Ether being transferred in Wei
 *
 */
export type TransactionValue = string;
/**
 *
 * ECDSA recovery id
 *
 */
export type TransactionSigV = string;
/**
 *
 * ECDSA signature r
 *
 */
export type TransactionSigR = string;
/**
 *
 * ECDSA signature s
 *
 */
export type TransactionSigS = string;
/**
 *
 * The optional block height description
 *
 */
export type BlockNumberTag = "earliest" | "latest" | "pending";
/**
 *
 * List of contract addresses from which to monitor events
 *
 */
export type Addresses = Address[];
export type OneOrArrayOfAddresses = Address | Addresses;
/**
 *
 * 32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))
 *
 */
export type Topic = string;
/**
 *
 * Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.
 *
 */
export type LogTopics = Topic[];
/**
 *
 * The key used to get the storage slot in its account tree.
 *
 */
export type StorageProofKey = string;
export type From = string;
export type AnyR7Vdx79W = any;
export interface Transaction {
  blockHash?: BlockHashOrNull;
  blockNumber?: BlockNumberOrNull;
  from?: From;
  gas: TransactionGas;
  gasPrice: TransactionGasPrice;
  hash?: TransactionHash;
  input?: TransactionInput;
  nonce: TransactionNonce;
  to?: To;
  transactionIndex?: TransactionIndex;
  value?: TransactionValue;
  v?: TransactionSigV;
  r?: TransactionSigR;
  s?: TransactionSigS;
  [k: string]: any;
}
export interface ObjectHAgrRKSz { [key: string]: any; }
/**
 *
 * The hex representation of the Keccak 256 of the RLP encoded block
 *
 */
export type BlockHash = string;
/**
 *
 * A number only to be used once
 *
 */
export type Nonce = string;
export type NonceOrNull = Nonce | Null;
/**
 *
 * Keccak hash of the uncles data in the block
 *
 */
export type BlockShaUncles = string;
/**
 *
 * The bloom filter for the logs of the block or null when its the pending block
 *
 */
export type BlockLogsBloom = string;
/**
 *
 * The root of the transactions trie of the block.
 *
 */
export type BlockTransactionsRoot = string;
/**
 *
 * The root of the final state trie of the block
 *
 */
export type BlockStateRoot = string;
/**
 *
 * The root of the receipts trie of the block
 *
 */
export type BlockReceiptsRoot = string;
export type AddressOrNull = Address | Null;
/**
 *
 * Integer of the difficulty for this block
 *
 */
export type BlockDifficulty = string;
/**
 *
 * Integer of the total difficulty of the chain until this block
 *
 */
export type BlockTotalDifficulty = Integer | Null;
/**
 *
 * The 'extra data' field of this block
 *
 */
export type BlockExtraData = string;
/**
 *
 * Integer the size of this block in bytes
 *
 */
export type BlockSize = string;
/**
 *
 * The maximum gas allowed in this block
 *
 */
export type BlockGasLimit = string;
/**
 *
 * The total used gas by all transactions in this block
 *
 */
export type BlockGasUsed = string;
/**
 *
 * The unix timestamp for when the block was collated
 *
 */
export type BlockTimeStamp = string;
export type TransactionOrTransactionHash = Transaction | TransactionHash;
/**
 *
 * Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter
 *
 */
export type TransactionsOrHashes = TransactionOrTransactionHash[];
/**
 *
 * Block hash of the RLP encoding of an uncle block
 *
 */
export type UncleHash = string;
/**
 *
 * Array of uncle hashes
 *
 */
export type UncleHashes = UncleHash[];
/**
 *
 * The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.
 *
 */
export interface Block {
  number?: BlockNumberOrNull;
  hash?: BlockHashOrNull;
  parentHash?: BlockHash;
  nonce?: NonceOrNull;
  sha3Uncles?: BlockShaUncles;
  logsBloom?: BlockLogsBloom;
  transactionsRoot?: BlockTransactionsRoot;
  stateRoot?: BlockStateRoot;
  receiptsRoot?: BlockReceiptsRoot;
  miner?: AddressOrNull;
  difficulty?: BlockDifficulty;
  totalDifficulty?: BlockTotalDifficulty;
  extraData?: BlockExtraData;
  size?: BlockSize;
  gasLimit?: BlockGasLimit;
  gasUsed?: BlockGasUsed;
  timestamp?: BlockTimeStamp;
  transactions?: TransactionsOrHashes;
  uncles?: UncleHashes;
  [k: string]: any;
}
/**
 *
 * Sender of the transaction
 *
 */
export type LogAddress = string;
/**
 *
 * The data/input string sent along with the transaction
 *
 */
export type LogData = string;
/**
 *
 * The index of the event within its transaction, null when its pending
 *
 */
export type LogIndex = string;
/**
 *
 * Whether or not the log was orphaned off the main chain
 *
 */
export type LogIsRemoved = boolean;
/**
 *
 * An indexed event generated during a transaction
 *
 */
export interface Log {
  address?: LogAddress;
  blockHash?: BlockHash;
  blockNumber?: BlockNumber;
  data?: LogData;
  logIndex?: LogIndex;
  removed?: LogIsRemoved;
  topics?: LogTopics;
  transactionHash?: TransactionHash;
  transactionIndex?: TransactionIndex;
  [k: string]: any;
}
/**
 *
 * The contract address created, if the transaction was a contract creation, otherwise null
 *
 */
export type ReceiptContractAddress = Address | Null;
/**
 *
 * The gas units used by the transaction
 *
 */
export type ReceiptCumulativeGasUsed = string;
/**
 *
 * The total gas used by the transaction
 *
 */
export type ReceiptGasUsed = string;
/**
 *
 * An array of all the logs triggered during the transaction
 *
 */
export type Logs = Log[];
/**
 *
 * A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series
 *
 */
export type BloomFilter = string;
/**
 *
 * The intermediate stateRoot directly after transaction execution.
 *
 */
export type ReceiptPostTransactionState = string;
/**
 *
 * Whether or not the transaction threw an error.
 *
 */
export type ReceiptStatus = boolean;
/**
 *
 * The receipt of a transaction
 *
 */
export interface Receipt {
  blockHash: BlockHash;
  blockNumber: BlockNumber;
  contractAddress: ReceiptContractAddress;
  cumulativeGasUsed: ReceiptCumulativeGasUsed;
  from: From;
  gasUsed: ReceiptGasUsed;
  logs: Logs;
  logsBloom: BloomFilter;
  to: To;
  transactionHash: TransactionHash;
  transactionIndex: TransactionIndex;
  postTransactionState?: ReceiptPostTransactionState;
  status?: ReceiptStatus;
  [k: string]: any;
}
/**
 *
 * The address of the account or contract of the request
 *
 */
export type ProofAccountAddress = string;
/**
 *
 * An individual node used to prove a path down a merkle-patricia-tree
 *
 */
export type ProofNode = string;
/**
 *
 * The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value
 *
 */
export type ProofNodes = ProofNode[];
/**
 *
 * The Ether balance of the account or contract of the request
 *
 */
export type ProofAccountBalance = string;
/**
 *
 * The code hash of the contract of the request (keccak(NULL) if external account)
 *
 */
export type ProofAccountCodeHash = string;
/**
 *
 * The transaction count of the account or contract of the request
 *
 */
export type ProofAccountNonce = string;
/**
 *
 * The storage hash of the contract of the request (keccak(rlp(NULL)) if external account)
 *
 */
export type ProofAccountStorageHash = string;
/**
 *
 * The value of the storage slot in its account tree
 *
 */
export type StorageProofValue = string;
/**
 *
 * Object proving a relationship of a storage value to an account's storageHash.
 *
 */
export interface StorageProof {
  key?: StorageProofKey;
  value?: StorageProofValue;
  proof?: ProofNodes;
  [k: string]: any;
}
/**
 *
 * Current block header PoW hash.
 *
 */
export type StorageProofSet = StorageProof[];
/**
 *
 * The merkle proofs of the specified account connecting them to the blockhash of the block specified
 *
 */
export interface ProofAccount {
  address?: ProofAccountAddress;
  accountProof?: ProofNodes;
  balance?: ProofAccountBalance;
  codeHash?: ProofAccountCodeHash;
  nonce?: ProofAccountNonce;
  storageHash?: ProofAccountStorageHash;
  storageProof?: StorageProofSet;
  [k: string]: any;
}
/**
 *
 * Block at which the import started (will only be reset, after the sync reached his head)
 *
 */
export type SyncingDataStartingBlock = string;
/**
 *
 * The current block, same as eth_blockNumber
 *
 */
export type SyncingDataCurrentBlock = string;
/**
 *
 * The estimated highest block
 *
 */
export type SyncingDataHighestBlock = string;
/**
 *
 * The known states
 *
 */
export type SyncingDataKnownStates = string;
/**
 *
 * The pulled states
 *
 */
export type SyncingDataPulledStates = string;
/**
 *
 * An object with sync status data
 *
 */
export interface SyncingData {
  startingBlock?: SyncingDataStartingBlock;
  currentBlock?: SyncingDataCurrentBlock;
  highestBlock?: SyncingDataHighestBlock;
  knownStates?: SyncingDataKnownStates;
  pulledStates?: SyncingDataPulledStates;
  [k: string]: any;
}
export type BooleanVyG3AETh = boolean;
export type Data = string;
export type BlockNumberOrTag = BlockNumber | BlockNumberTag;
export type IsTransactionsIncluded = boolean;
/**
 *
 * A filter used to monitor the blockchain for log/events
 *
 */
export interface Filter {
  fromBlock?: BlockNumber;
  toBlock?: BlockNumber;
  address?: OneOrArrayOfAddresses;
  topics?: LogTopics;
  [k: string]: any;
}
/**
 *
 * Hex representation of the storage slot where the variable exists
 *
 */
export type Position = string;
/**
 *
 * A storage key is indexed from the solidity compiler by the order it is declared. For mappings it uses the keccak of the mapping key with its position (and recursively for X-dimensional mappings)
 *
 */
export type StorageKeys = any;
/**
 *
 * An identifier used to reference the filter.
 *
 */
export type FilterId = string;
/**
 *
 * Hex representation of a variable length byte array
 *
 */
export type Bytes = string;
export interface TransactionObjectWithSender { [key: string]: any; }
export type StringDoaGddGA = string;
export type UnorderedSetOfObjectHAgrRKSzAfoBnX12 = ObjectHAgrRKSz[];
export type ClientVersion = string;
export type IsNetListening = boolean;
/**
 *
 * Hex representation of number of connected peers
 *
 */
export type NumConnectedPeers = string;
export type NetworkId = string;
/**
 *
 * List of addresses
 *
 */
export type UnorderedSetOfAddressMvq5Ie3U = Address[];
export type ChainId = string;
/**
 *
 * Integer of the current gas price
 *
 */
export type GasPriceResult = string;
export type IntegerOrNull = Integer | Null;
export type BlockOrNull = Block | Null;
export type SetOfLogs = Log[];
/**
 *
 * Hex representation of a 256 bit unit of data
 *
 */
export type DataWord = string;
export type TransactionOrNull = Transaction | Null;
export type TransactionReceiptOrNull = Receipt | Null;
export type ProofAccountOrNull = ProofAccount | Null;
export type LogResult = Log[];
/**
 *
 * An array of transactions
 *
 */
export type Transactions = Transaction[];
export type IsSyncingResult = SyncingData | BooleanVyG3AETh;
/**
 *
 * Generated! Represents an alias to any of the provided schemas
 *
 */
export type AnyOfDataTransactionBlockNumberOrTagTransactionAddressBlockNumberBlockHashIsTransactionsIncludedBlockNumberOrTagIsTransactionsIncludedBlockHashBlockNumberOrTagAddressBlockNumberTransactionHashBlockHashIntegerBlockNumberOrTagIntegerFilterAddressPositionBlockNumberOrTagBlockHashIntegerBlockNumberOrTagIntegerBlockNumberOrTagBlockNumberOrTagTransactionHashTransactionHashAddressBlockNumberOrTagTransactionHashAddressStorageKeysBlockNumberOrTagFilterFilterIdFilterIdFilterIdAddressBytesTransactionObjectWithSenderTransactionObjectWithSenderBytesStringDoaGddGAUnorderedSetOfObjectHAgrRKSzAfoBnX12StringDoaGddGAClientVersionKeccakIsNetListeningNumConnectedPeersNetworkIdUnorderedSetOfAddressMvq5Ie3UBlockNumberOrTagBytesChainIdAddressIntegerGasPriceResultIntegerOrNullBlockOrNullBlockOrNullIntegerOrNullIntegerOrNullBytesBytesBytesBytesSetOfLogsDataWordTransactionOrNullTransactionOrNullTransactionOrNullReceiptTransactionOrNullReceiptNonceOrNullTransactionReceiptOrNullProofAccountOrNullIntegerBooleanVyG3AEThFilterIdIntegerLogResultSetOfLogsBooleanVyG3AEThFilterIdTransactionsBytesBytesTransactionHashKeccakIsSyncingResultStringDoaGddGABooleanVyG3AETh = Data | Transaction | BlockNumberOrTag | Address | BlockNumber | BlockHash | IsTransactionsIncluded | TransactionHash | Integer | Filter | Position | StorageKeys | FilterId | Bytes | TransactionObjectWithSender | StringDoaGddGA | UnorderedSetOfObjectHAgrRKSzAfoBnX12 | ClientVersion | Keccak | IsNetListening | NumConnectedPeers | NetworkId | UnorderedSetOfAddressMvq5Ie3U | ChainId | GasPriceResult | IntegerOrNull | BlockOrNull | SetOfLogs | DataWord | TransactionOrNull | Receipt | NonceOrNull | TransactionReceiptOrNull | ProofAccountOrNull | BooleanVyG3AETh | LogResult | Transactions | IsSyncingResult;
export type Web3ClientVersion = () => Promise<ClientVersion>;
export type Web3Sha3 = (data: Data) => Promise<Keccak>;
export type NetListening = () => Promise<IsNetListening>;
export type NetPeerCount = () => Promise<NumConnectedPeers>;
export type NetVersion = () => Promise<NetworkId>;
export type EthAccounts = () => Promise<UnorderedSetOfAddressMvq5Ie3U>;
export type EthBlockNumber = () => Promise<BlockNumberOrTag>;
export type EthCall = (transaction: Transaction, blockNumber: BlockNumberOrTag) => Promise<Bytes>;
export type EthChainId = () => Promise<ChainId>;
export type EthCoinbase = () => Promise<Address>;
export type EthEstimateGas = (transaction: Transaction) => Promise<Integer>;
export type EthGasPrice = () => Promise<GasPriceResult>;
export type EthGetBalance = (address: Address, blockNumber: BlockNumber) => Promise<IntegerOrNull>;
export type EthGetBlockByHash = (blockHash: BlockHash, includeTransactions: IsTransactionsIncluded) => Promise<BlockOrNull>;
export type EthGetBlockByNumber = (blockNumber: BlockNumberOrTag, includeTransactions: IsTransactionsIncluded) => Promise<BlockOrNull>;
export type EthGetBlockTransactionCountByHash = (blockHash: BlockHash) => Promise<IntegerOrNull>;
export type EthGetBlockTransactionCountByNumber = (blockNumber: BlockNumberOrTag) => Promise<IntegerOrNull>;
export type EthGetCode = (address: Address, blockNumber: BlockNumber) => Promise<Bytes>;
export type EthGetRawTransactionByHash = (transactionHash: TransactionHash) => Promise<Bytes>;
export type EthGetRawTransactionByBlockHashAndIndex = (blockHash: BlockHash, index: Integer) => Promise<Bytes>;
export type EthGetRawTransactionByBlockNumberAndIndex = (blockNumber: BlockNumberOrTag, index: Integer) => Promise<Bytes>;
export type EthGetLogs = (filter: Filter) => Promise<SetOfLogs>;
export type EthGetStorageAt = (address: Address, key: Position, blockNumber: BlockNumberOrTag) => Promise<DataWord>;
export type EthGetTransactionByBlockHashAndIndex = (blockHash: BlockHash, index: Integer) => Promise<TransactionOrNull>;
export type EthGetTransactionByBlockNumberAndIndex = (blockNumber: BlockNumberOrTag, index: Integer) => Promise<TransactionOrNull>;
export type EthGetTransactionsByBlockNumber = (blockNumber: BlockNumberOrTag) => Promise<TransactionOrNull>;
export type EthGetTransactionReceiptsByBlockNumber = (blockNumber: BlockNumberOrTag) => Promise<Receipt>;
export type EthGetTransactionByHash = (transactionHash: TransactionHash) => Promise<TransactionOrNull>;
export type EthGetTransactionDataAndReceipt = (transactionHash: TransactionHash) => Promise<Receipt>;
export type EthGetTransactionCount = (address: Address, blockNumber: BlockNumberOrTag) => Promise<NonceOrNull>;
export type EthGetTransactionReceipt = (transactionHash: TransactionHash) => Promise<TransactionReceiptOrNull>;
export type EthGetProof = (address: Address, storageKeys: StorageKeys, blockNumber: BlockNumberOrTag) => Promise<ProofAccountOrNull>;
export type EthHashrate = () => Promise<Integer>;
export type EthMining = () => Promise<BooleanVyG3AETh>;
export type EthNewBlockFilter = () => Promise<FilterId>;
export type EthNewFilter = (filter: Filter) => Promise<Integer>;
export type EthGetFilterChanges = (filterId: FilterId) => Promise<LogResult>;
export type EthGetFilterLogs = (filterId: FilterId) => Promise<SetOfLogs>;
export type EthUninstallFilter = (filterId: FilterId) => Promise<BooleanVyG3AETh>;
export type EthNewPendingTransactionFilter = () => Promise<FilterId>;
export type EthPendingTransactions = () => Promise<Transactions>;
export type EthSign = (Address: Address, Message: Bytes) => Promise<Bytes>;
export type EthSignTransaction = (Transaction: TransactionObjectWithSender) => Promise<Bytes>;
export type EthSendTransaction = (Transaction: TransactionObjectWithSender) => Promise<TransactionHash>;
export type EthSendRawTransaction = (signedTransactionData: Bytes) => Promise<Keccak>;
export type EthSyncing = () => Promise<IsSyncingResult>;
export type EthSubscribe = (subscriptioName: StringDoaGddGA, optionalArguments : UnorderedSetOfObjectHAgrRKSzAfoBnX12) => Promise<StringDoaGddGA>;
export type EthUnsubscribe = (subscriptionId: StringDoaGddGA) => Promise<BooleanVyG3AETh>;

export interface Options {
  transport: {
    type: "websocket" | "http" | "https" | "postmessagewindow" | "postmessageiframe";
    host: string;
    port: number;
    path?: string;
    protocol?: string;
  },
}

export class BinanceSmartChainJSONRPCSpecification {
  public rpc: Client;
  public static openrpcDocument: OpenRPC = {"openrpc":"1.2.4","info":{"title":"Binance Smart Chain JSON-RPC Specification","description":"A specification of the standard interface for Binance Smart Chain clients.","license":{"name":"CC0-1.0","url":"https://creativecommons.org/publicdomain/zero/1.0/legalcode"},"version":"0.0.4"},"servers":[{"name":"Mainnet","url":"https://bsc-dataseed.binance.org/"}],"methods":[{"name":"web3_clientVersion","description":"Returns the version of the current client","summary":"current client version","params":[],"result":{"name":"clientVersion","description":"client version","schema":{"title":"clientVersion","type":"string"}},"examples":[{"name":"clientVersionExample","params":[],"result":{"name":"clientVersionResultExample","value":"Geth/v1.1.0-beta-032970b2/linux-amd64/go1.16.4"}}]},{"name":"web3_sha3","summary":"Hashes data","description":"Hashes data using the Keccak-256 algorithm","params":[{"name":"data","description":"data to hash using the Keccak-256 algorithm","summary":"data to hash","schema":{"title":"data","type":"string","pattern":"^0x[a-fA-F\\d]+$"}}],"result":{"name":"hashedData","description":"Keccak-256 hash of the given data","schema":{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"}},"examples":[{"name":"sha3Example","params":[{"name":"sha3ParamExample","value":"0x68656c6c6f20776f726c64"}],"result":{"name":"sha3ResultExample","value":"0x47173285a8d7341e5e972fc677286384f802f8ef42a5ec5f03bbfa254cb01fad"}}]},{"name":"net_listening","summary":"returns listening status","description":"Determines if this client is listening for new network connections.","params":[],"result":{"name":"netListeningResult","description":"`true` if listening is active or `false` if listening is not active","schema":{"title":"isNetListening","type":"boolean"}},"examples":[{"name":"netListeningTrueExample","description":"example of true result for net listening","params":[],"result":{"name":"netListeningExampleFalseResult","value":true}}]},{"name":"net_peerCount","summary":"number of peers","description":"Returns the number of peers currently connected to this client.","params":[],"result":{"name":"quantity","description":"number of connected peers.","schema":{"title":"numConnectedPeers","description":"Hex representation of number of connected peers","type":"string"}},"examples":[{"name":"peerCountExample","params":[],"result":{"name":"peerCountResultExample","value":"0x3"}}]},{"name":"net_version","summary":"Network identifier associated with network","description":"Returns the network ID associated with the current network.","params":[],"result":{"name":"networkId","description":"Network ID associated with the current network","schema":{"title":"networkId","type":"string","pattern":"^[\\d]+$"}},"examples":[{"name":"NetversionExample","params":[],"result":{"name":"NetversionResultExample","value":"56"}}]},{"name":"eth_accounts","summary":"Returns a list of addresses owned by client.","params":[],"result":{"name":"addresses","schema":{"type":"array","description":"List of addresses","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}}},{"name":"eth_blockNumber","summary":"Returns the number of most recent block.","params":[],"result":{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}},"examples":[{"name":"blockNumberExample","params":[],"result":{"name":"blockNumberResultExample","value":"0x9247e5"}}]},{"name":"eth_call","summary":"Executes a new message call (locally) immediately without creating a transaction on the block chain.","params":[{"required":true,"name":"transaction","schema":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}},{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"returnValue","description":"The return value of the executed contract","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"examples":[{"name":"callExample","params":[{"name":"Transaction","value":{"from":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","to":"0xd46e8dd67c5d32be8058bb8eb970870f07244567","gas":"0x76c0","gasPrice":"0x9184e72a000","value":"0x9184e72a","data":"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"}},{"name":"BlockNumber","value":"latest"}],"result":{"name":"callExampleResult","value":"0x"}}]},{"name":"eth_chainId","summary":"Returns the currently configured chain id","description":"Returns the currently configured chain id, a value used in replay-protected transaction signing as introduced by [EIP-155](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md).","params":[],"result":{"name":"chainId","description":"hex format integer of the current chain id. Defaults are ETC=61, ETH=1, Morden=62.","schema":{"title":"chainId","type":"string","pattern":"^0x[a-fA-F\\d]+$"}},"examples":[{"name":"chainIdExample","params":[],"result":{"name":"chainIdExampleResult","value":"0x38"}}]},{"name":"eth_coinbase","summary":"Returns the client coinbase address.","params":[],"result":{"name":"address","description":"The address owned by the client that is used as default for things like the mining reward","schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}},{"name":"eth_estimateGas","summary":"Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The transaction will not be added to the blockchain. Note that the estimate may be significantly more than the amount of gas actually used by the transaction, for a variety of reasons including EVM mechanics and node performance.","params":[{"required":true,"name":"transaction","schema":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}}],"result":{"name":"gasUsed","description":"The amount of gas used","schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}},"examples":[{"name":"estimateGasExample","params":[{"name":"Transaction","value":{"from":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","to":"0xd46e8dd67c5d32be8058bb8eb970870f07244567","gas":"0x76c0","gasPrice":"0x9184e72a000","value":"0x9184e72a","data":"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"}},{"name":"BlockNumber","value":"latest"}],"result":{"name":"estimateGasExampleResult","value":"0x5498"}}]},{"name":"eth_gasPrice","summary":"Returns the current price per gas in wei","params":[],"result":{"name":"gasPrice","required":true,"schema":{"title":"gasPriceResult","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Integer of the current gas price"}},"examples":[{"name":"gasPriceExample","params":[],"result":{"name":"gasPriceExampleResult","value":"0x12a05f200"}}]},{"name":"eth_getBalance","summary":"Returns Ether balance of a given or account or contract","params":[{"name":"address","required":true,"description":"The address of the account or contract","schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"blockNumber","description":"A BlockNumber at which to request the balance","schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}}],"result":{"name":"getBalanceResult","schema":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getBalanceExample","params":[{"name":"Address","value":"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"},{"name":"BlockNumber","value":"latest"}],"result":{"name":"getBalanceExampleResult","value":"0x63c39e776974bc999f36e"}}]},{"name":"eth_getBlockByHash","summary":"Gets a block for a given hash","params":[{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},{"name":"includeTransactions","description":"If `true` it returns the full transaction objects, if `false` only the hashes of the transactions.","required":true,"schema":{"title":"isTransactionsIncluded","type":"boolean"}}],"result":{"name":"getBlockByHashResult","schema":{"title":"blockOrNull","oneOf":[{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getBlockByHashExample","params":[{"name":"Address","value":"0x2b8ec4b3d32ad9349d7a9f86d0c3dc4e9b0286af81056c54bb2e4fc72c7a4d55"},{"name":"isTransactionsIncluded","value":false}],"result":{"name":"getBlockByHashExampleResult","value":{"difficulty":"0x2","extraData":"0xd883010100846765746888676f312e31352e35856c696e7578000000fc3ca6b70132629940e35cef1e1a29ec3284e059611adf3ada7bc9e94439b3f01463d14e5c28747682efa945305f8f8b5d9b4a048ddc7fd6b5b6935853091b99cf209be201","gasLimit":"0x510ff40","gasUsed":"0x509865d","hash":"0x2b8ec4b3d32ad9349d7a9f86d0c3dc4e9b0286af81056c54bb2e4fc72c7a4d55","logsBloom":"0xd7f7977dfbf7f7fefd7fef37fe68e9fe4b3b3ffbef5fecf3e7fffdffff66e7456fbf7effd4f19fbb8dfbfefd5faefe8a79dccfbefe1fd53efffaee5ff9fdf5feacbb5dd7e7ddfcebf140bddaff1b7bfdf65ff7fb53f679ebf7eefefa9ff5feff77eff9ffbef3ef7dd5ffeade94ff7bfdedd79f7fdffffffff5ffdfbffbbebf7bffc5f9b5b7ffbfe77fdfdfdc3fdf7abfffffbee57bfff7ffff6fdefecde9fbfbff3f5bef4deffbebff6fafdcfb7fefbcff35fe77f5ff7bbf9f5f9b61ee3efcfefbbf6effe17bffd79f7ffea3ffdb9f7b7d9fd77fbc9cbd7fdffbebcbed5ffdfffff6fffffddf7fbbfbfbffbfbffffbfddff65efbeffff779effff56fedffd9cf","miner":"0x70f657164e5b75689b64b7fd1fa275f334f28e18","mixHash":"0x0000000000000000000000000000000000000000000000000000000000000000","nonce":"0x0000000000000000","number":"0x924403","parentHash":"0x1c4bc901b58c3b697253e8c71a966c00082e2b32bc3ca79e0d2c845bc7f74e68","receiptsRoot":"0x66691b3326db9ef08513d10e47d1c74533a57ea581de57a3bfcd9bd515361e1f","sha3Uncles":"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347","size":"0x1cee6","stateRoot":"0xa9a58e53a92d902740d7e3f034af691bc65604be74a6e6bad061cf47d0b35459","timestamp":"0x61032ac8","totalDifficulty":"0x1235827","transactionsRoot":"0x26a2ef21d1ea3824d087096ceefd2e55e1c0ba50df6ab5ceeabaafb2aca2cf2b","transactions":["0xc0bc09e74989de4f8b788b5216fb971af7f58fba6162bc4d619f790978431366","0x862af3a8ba74264e2db47d27850d1b87de06538244e07d6b15e50c8a60538370","0xdd5cee575ced914c87fcd467a79a98199d11c2a6a53804c937bbc32fca4f8513"],"uncles":[]}}}]},{"name":"eth_getBlockByNumber","summary":"Gets a block for a given number","params":[{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}},{"name":"includeTransactions","description":"If `true` it returns the full transaction objects, if `false` only the hashes of the transactions.","required":true,"schema":{"title":"isTransactionsIncluded","type":"boolean"}}],"result":{"name":"getBlockByNumberResult","schema":{"title":"blockOrNull","oneOf":[{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getBlockByNumberExample","params":[{"name":"BlockNumber","value":"0x5BAD55"},{"name":"includeTransactions","value":false}],"result":{"name":"getBlockByNumberExampleResult","value":[{"difficulty":"0x2","extraData":"0xd883010006846765746888676f312e31352e35856c696e7578000000fc3ca6b79e82d92ced5d3fee673bccf6b3c1abbf13fdf8869fff2da31f06414ade822158719149591fcacd1aca0ea5c62d0900defd0116d6c7bc74f89b9c74bfb855aa6701","gasLimit":"0x1c9c380","gasUsed":"0x70f0a7","hash":"0xa9b1f60cef78a4ef94fe47f0fb2f10c61e9b11ad48ab17d145a94ba20e14f0ff","logsBloom":"0x0da40448440603901ea0c1568889407520840c04a450c844a012b42c84c001021c2303442001408056909be011282312e8015020101230120316090495b8d0941c301401e550104b2184180f4106e06022924a2418c80cd2462425048050980bd94001a50306022cdd4082140214c800e8200001a4ec1701050b281410a819460480011030305008099f480d0510087418f406b10022c60b74804040108a4c700200440000c004498000490201522104e4208320bc90002e8021022981f144242015d04b00b815430c64088e0c17310ab415404080000290249805024e04a0e170100c24840d00c803b88019002902210515000ce082886088a08409c5048800","miner":"0x72b61c6014342d914470ec7ac2975be345796c2b","mixHash":"0x0000000000000000000000000000000000000000000000000000000000000000","nonce":"0x0000000000000000","number":"0x5bad55","parentHash":"0x7327586b5fbfacf464854c243756706cb9da563029261a9951ab5c5a8794a72a","receiptsRoot":"0x2f8a6063b8b91143408d33a9e069c0e1e75ce9699ba306d83933b34c4286f6c9","sha3Uncles":"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347","size":"0x5c54","stateRoot":"0xf70aed1584bc1a4885dd4c628e947004d948f50a25da947813f24c8c77a3564c","timestamp":"0x605d659f","totalDifficulty":"0xb713d5","transactions":["0x4e7bf2d320a4172767ad010e9e404694d7898bafc924eebccd0671e3e0bccbd5","0x84e12315b3566f8260042e9fb765d5e7898bb403dddc685994473ff1d9e40589","0x2ec8a0530ac2b058b8aa2b0d4b1ddcd62cda58deeb0f1820057aa3dd22be229e","0x6963b145c8b8cc55dffa16d0b3f9914af43c78fd6f1826844f20f34a4bf731e2","0x56508ab7263f5fc78a95a5e33eeedb9762353d065e67cb7be62f63909252f888","0x7332ba437129970501fedabba08500f05f9c8c9f397983be1ec19487ff63358d"],"transactionsRoot":"0x873c3343a2dceab913228b2ed54402f8221e681ff2096d2fe5b6ead36eadda75","uncles":[]}]}}]},{"name":"eth_getBlockTransactionCountByHash","summary":"Returns the number of transactions in a block from a block matching the given block hash.","params":[{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}}],"result":{"name":"blockTransactionCountByHash","description":"The Number of total transactions in the given block","schema":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getBlockTransactionCountByHashExample","params":[{"name":"BlockHash","value":"0x2b8ec4b3d32ad9349d7a9f86d0c3dc4e9b0286af81056c54bb2e4fc72c7a4d55"}],"result":{"name":"getBlockTransactionCountByHashExampleResult","value":"0x1fc"}}]},{"name":"eth_getBlockTransactionCountByNumber","summary":"Returns the number of transactions in a block from a block matching the given block number.","params":[{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"blockTransactionCountByHash","description":"The Number of total transactions in the given block","schema":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getBlockTransactionCountByNumberExample","params":[{"name":"BlockNumber","value":"0x5BAD55"}],"result":{"name":"getBlockTransactionCountByNumberExampleResult","value":"0x3d"}}]},{"name":"eth_getCode","summary":"Returns code at a given contract address","params":[{"name":"address","required":true,"description":"The address of the contract","schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"blockNumber","description":"A BlockNumber of which the code existed","schema":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"}}],"result":{"name":"bytes","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"examples":[{"name":"getCodeExample","params":[{"name":"Address","value":"0x2170ed0880ac9a755fd29b2688956bd959f933f8"},{"name":"BlockNumber","value":"latest"}],"result":{"name":"getCodeExampleResult","value":"0x6080604052348015610..."}}]},{"name":"eth_getRawTransactionByHash","summary":"Returns raw transaction data of a transaction with the given hash.","params":[{"name":"transactionHash","required":true,"schema":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}}],"result":{"name":"rawTransactionByHash","description":"The raw transaction data","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"examples":[{"name":"getRawTransactionByHashExample","params":[{"name":"TransactionHash","value":"0xbeda1fd4d87ba448f16be3bcc113b059b542aa2747c4ecbe74a521c0c505e066"}],"result":{"name":"getCodeExampleResult","value":"0xf8958303296b80887fffffffffffffff940000000000000000000000000000000000001000880451591c4bb905dfa4f340fa01000000000000000000000000be807dddb074639cd9fa61b47676c064fc50d62c8194a083e4cb1bd1a5dc49c4029e8a48536dada1a42c36ead4bce297313d356f62c074a0733fe58238392bdb1905f305239fad481745ab61a527cbf1527ceefbde9bcc2b..."}}]},{"name":"eth_getRawTransactionByBlockHashAndIndex","summary":"Returns raw transaction data of a transaction with the block hash and index of which it was mined.","params":[{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},{"name":"index","description":"The ordering in which a transaction is mined within its block.","required":true,"schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}}],"result":{"name":"rawTransaction","description":"The raw transaction data","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"examples":[{"name":"getRawTransactionByBlockHashAndIndexExample","params":[{"name":"BlockHash","value":"0x52389ff7f295f9e0bdc22faf998cac516355a271b58cb743e9ec709a24517508"},{"name":"index","value":"0x1"}],"result":{"name":"getRawTransactionByBlockHashAndIndexExampleResult","value":"0xf8ed8215878506c0aae7c..."}}]},{"name":"eth_getRawTransactionByBlockNumberAndIndex","summary":"Returns raw transaction data of a transaction with the block number and index of which it was mined.","params":[{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}},{"name":"index","description":"The ordering in which a transaction is mined within its block.","required":true,"schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}}],"result":{"name":"rawTransaction","description":"The raw transaction data","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"examples":[{"name":"getRawTransactionByBlockNumberAndIndexExample","params":[{"name":"BlockNumber","value":"0x1"},{"name":"Index","value":"0x1"}],"result":{"name":"getRawTransactionByBlockNumberAndIndexExampleResult","value":"0xf86a0180887fffffffffffffff9400000000000000000000000000000000000010018084e1c7392a8193a0d6541593c8d1bce8024f2bccfa6f73fc3a107f08e02b39a4571a027863558b3ba03448e68c416c115137e9cd1b04a9a09e10a53eadd958d9606962b4170ffffbe7..."}}]},{"name":"eth_getLogs","summary":"Returns an array of all logs matching a given filter object.","params":[{"name":"filter","required":true,"schema":{"title":"filter","type":"object","description":"A filter used to monitor the blockchain for log/events","properties":{"fromBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"toBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"address":{"title":"oneOrArrayOfAddresses","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}]},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}}}}}],"result":{"name":"logs","description":"An array of all logs matching filter with given id.","schema":{"title":"setOfLogs","type":"array","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}}},"examples":[{"name":"eth_getLogsExample","params":[{"name":"Filter","value":{"fromBlock":"0x4C3326","toBlock":"0x4C3328","address":"0xe561479bebee0e606c19bb1973fc4761613e3c42","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"]}}],"result":{"name":"Logs","value":[{"address":"0xe561479bebee0e606c19bb1973fc4761613e3c42","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x000000000000000000000000730e2065b9daee84c3003c05bf6d2b3a08e55667","0x000000000000000000000000d7d19938eae260d7f0e0a4c36e665ff4cf4b7acc"],"data":"0x000000000000000000000000000000000000000000000000076cd96f53f24b0a","blockNumber":"0x4c3326","transactionHash":"0x73844fcfc6beab2e973a897c9573f4d79811b12213ce263045a203e0d3cea90e","transactionIndex":"0xb9","blockHash":"0x671e07aeefcd1a32051673f51329a577f0698f492f49aa321f29614eb357a596","logIndex":"0xf7","removed":false}]}}]},{"name":"eth_getStorageAt","summary":"Gets a storage value from a contract address, a position, and an optional blockNumber","params":[{"name":"address","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"key","required":true,"schema":{"title":"position","type":"string","description":"Hex representation of the storage slot where the variable exists","pattern":"^0x([a-fA-F0-9]?)+$"}},{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"dataWord","schema":{"title":"dataWord","type":"string","description":"Hex representation of a 256 bit unit of data","pattern":"^0x([a-fA-F\\d]{64})?$"}},"examples":[{"name":"getStorageAtExample","params":[{"name":"Data","value":"0x295a70b2de5e3953354a6a8344e616ed314d7251"},{"name":"Quantity","value":"0x0"},{"name":"BlockNumber","value":"latest"}],"result":{"name":"getStorageAtResultExample","value":"0x0000000000000000000000000000000000000000000000000000000000000000"}}]},{"name":"eth_getTransactionByBlockHashAndIndex","summary":"Returns the information about a transaction requested by the block hash and index of which it was mined.","params":[{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},{"name":"index","description":"The ordering in which a transaction is mined within its block.","required":true,"schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}}],"result":{"name":"transactionResult","description":"Returns a transaction or null","schema":{"title":"TransactionOrNull","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getTransactionByBlockHashAndIndexExample","params":[{"name":"blockHashExample","value":"0x4afd743f186bc6028c44e2916a62405b9b46200e4dabebe59b79b24a40c792b6"},{"name":"indexExample","value":"0x1"}],"result":{"name":"getTransactionByBlockHashAndIndexResultExample","value":[{"blockHash":"0x4afd743f186bc6028c44e2916a62405b9b46200e4dabebe59b79b24a40c792b6","blockNumber":"0x6f3424","from":"0x78e1ca1bb8995dbc5d1910a0645727d3946c4bd3","gas":"0x5ddca","gasPrice":"0x469ff38f50","hash":"0x5f74ecf1cd8a05d03d43dd148ce775099a87712da7cc14a0effd9d501fc79f99","input":"0x4b6c0339000000000000000000000000000000000000000000000001915e0b0d798a3000000000000000000000000000000000000000000000000001915e0b0d798a300000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000001104000000000000000000000000d6ef59d6e6356ab232295a66a786117978bf166b0000000000000000000000000000000000000000000000000000000000000003000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bbf8580000000000000000000000005e90253fbae4dab78aa351f4e6fed08a64ab448c000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bbf8580000000000000000000000000000000000000000000000000000000000000002000000000000000000000000d3f478f0d5e98b01f757bc6cb54db4c00b9827ee0000000000000000000000000f954e4b6fc09bf87528924527306b209f2b2199","nonce":"0x3986","to":"0xd6ef59d6e6356ab232295a66a786117978bf276f","transactionIndex":"0x1","value":"0x0","type":"0x0","v":"0x1b","r":"0xfd85663452982211d15539f77d1de716ae089bfb4d9e5b183f18db2868e3a091","s":"0x50bc2974532b307d29fe6aa6ed56be1344105c27f500957703c86193d6212ecb"}]}}]},{"name":"eth_getTransactionByBlockNumberAndIndex","summary":"Returns the information about a transaction requested by the block number and index of which it was mined.","params":[{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}},{"name":"index","description":"The ordering in which a transaction is mined within its block.","required":true,"schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}}],"result":{"name":"transactionResult","description":"Returns a transaction or null","schema":{"title":"TransactionOrNull","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getTransactionByBlockNumberAndIndexExample","params":[{"name":"blockNumber","value":"0x6F3620"},{"name":"indexExample","value":"0x0"}],"result":{"name":"getTransactionByBlockNumberAndIndexResultExample","value":[{"blockHash":"0xe84fe3e06769f2bc5bae419de2c68a6f58917feb1c9fe7fa22abe9685b09412d","blockNumber":"0x6f3620","from":"0x4cf8800ccc0a56396f77b1e7c46160f5df0e09a5","gas":"0x186a0","gasPrice":"0x5d21dba00","hash":"0x6c46e09a9a0d563ceb540ff32204e43f63090f8a28f1240ebde6f3aef6481a28","input":"0xa9059cbb000000000000000000000000e926e07abd2aa8170cef9ecfad6e2e65af7cceaa000000000000000000000000000000000000000000000000a4c81fda4bf52000","nonce":"0x406c","to":"0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82","transactionIndex":"0x0","value":"0x0","type":"0x0","v":"0x93","r":"0xbe9f336c68ef336fcf03fed1d4c8fa6f51beb092056f2201a28e1f59d465ef7e","s":"0x5f28510ad969b4faf8ca648900d8e5ab961761b940b5908a6e85db69db383c96"}]}}]},{"name":"eth_getTransactionsByBlockNumber","summary":"Returns the information about a transaction requested by the block number.","params":[{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"transactionResult","description":"Returns a transaction or null","schema":{"title":"TransactionOrNull","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getTransactionsByBlockNumberExample","params":[{"name":"blockNumber","value":"0x5"}],"result":{"name":"getTransactionsByBlockNumberResultExample","value":[{"blockHash":"0xccb5d33f94d234f2bdce1acef59d5eb9193edc50692b82b6e0f80a8345ac7e6f","blockNumber":"0x5","from":"0x78f3adfc719c99674c072166708589033e2d9afe","gas":"0x7fffffffffffffff","gasPrice":"0x0","hash":"0xf5c280e505ce3747f1167658e91f908893e41115b85f5cc284c5a149e2722f1f","input":"0xc96be4cb0000000000000000000000004430b3230294d12c6ab2aac5c2cd68e80b16b581","nonce":"0x0","to":"0x0000000000000000000000000000000000001001","transactionIndex":"0x0","value":"0x0","type":"0x0","v":"0x93","r":"0x1ec4cf620c77e72e32ef5bd5b5a79f725be7feba3a8d2c88ea84a972009566aa","s":"0x378a15dc0887d1af22d41b98baf79d25053169f4455af087a18f02ddea4c736d"}]}}]},{"name":"eth_getTransactionReceiptsByBlockNumber","summary":"Returns the receipt of a transaction by block number.","params":[{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"transactionReceiptResult","schema":{"title":"receipt","type":"object","description":"The receipt of a transaction","required":["blockHash","blockNumber","contractAddress","cumulativeGasUsed","from","gasUsed","logs","logsBloom","to","transactionHash","transactionIndex"],"properties":{"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"contractAddress":{"title":"ReceiptContractAddress","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}],"description":"The contract address created, if the transaction was a contract creation, otherwise null"},"cumulativeGasUsed":{"title":"ReceiptCumulativeGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The gas units used by the transaction"},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gasUsed":{"title":"ReceiptGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total gas used by the transaction"},"logs":{"title":"logs","type":"array","description":"An array of all the logs triggered during the transaction","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}},"logsBloom":{"title":"bloomFilter","type":"string","description":"A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"postTransactionState":{"title":"ReceiptPostTransactionState","type":"string","description":"The intermediate stateRoot directly after transaction execution.","pattern":"^0x[a-fA-F\\d]{64}$"},"status":{"title":"ReceiptStatus","description":"Whether or not the transaction threw an error.","type":"boolean"}}}},"examples":[{"name":"getTransactionReceiptsByBlockNumberExample","params":[{"name":"blockNumber","value":"0x5"}],"result":{"name":"getTransactionReceiptsByBlockNumberResultExample","value":[{"blockHash":"0xccb5d33f94d234f2bdce1acef59d5eb9193edc50692b82b6e0f80a8345ac7e6f","blockNumber":"0x5","contractAddress":null,"cumulativeGasUsed":"0x187dd","from":"0x78f3adfc719c99674c072166708589033e2d9afe","gasUsed":"0x187dd","logs":[{"address":"0x0000000000000000000000000000000000001001","topics":["0xddb6012116e51abf5436d956a4f0ebd927e92c576ff96d7918290c8782291e3e","0x0000000000000000000000004430b3230294d12c6ab2aac5c2cd68e80b16b581"],"data":"0x","blockNumber":"0x5","transactionHash":"0xf5c280e505ce3747f1167658e91f908893e41115b85f5cc284c5a149e2722f1f","transactionIndex":"0x0","blockHash":"0xccb5d33f94d234f2bdce1acef59d5eb9193edc50692b82b6e0f80a8345ac7e6f","logIndex":"0x0","removed":false}],"logsBloom":"0xstatus":"0x1","to":"0x0000000000000000000000000000000000001001","transactionHash":"0xf5c280e505ce3747f1167658e91f908893e41115b85f5cc284c5a149e2722f1f","transactionIndex":"0x0"}]}}]},{"name":"eth_getTransactionByHash","summary":"Returns the information about a transaction requested by transaction hash.","params":[{"name":"transactionHash","required":true,"schema":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}}],"result":{"name":"transactionResult","description":"Returns a transaction or null","schema":{"title":"TransactionOrNull","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getTransactionByHashExample","params":[{"name":"TransactionHash","value":"0x5508f1e4304cdc7d1f601e8e0322629ddcfb4ad1b1858d09e6c0b78bc097e863"}],"result":{"name":"getTransactionByHashResultExample","value":[{"blockHash":"0xde6533bd819945cbee552728721a8bef25279ead24de58fe17f34e7c063abed3","blockNumber":"0x6ef8d5","from":"0xa525121b54c473e3071ce15dba622d5e23970ed3","gas":"0x5208","gasPrice":"0x12a05f200","hash":"0x5508f1e4304cdc7d1f601e8e0322629ddcfb4ad1b1858d09e6c0b78bc097e863","input":"0x","nonce":"0x1","to":"0x71c7656ec7ab88b098defb751b7401b5f6d8976f","transactionIndex":"0x1b7","value":"0x54e0048173400","type":"0x0","v":"0x1b","r":"0x437b3bef6de3da5b079448134f3813f34901a2473ecdcb7712f5b138c5ca33c3","s":"0x35d08bdcf368764d753c3825b2d99d082efca1402313ec48d9e301ff0e355e09"}]}}]},{"name":"eth_getTransactionDataAndReceipt","summary":"Returns the receipt of a transaction by transaction hash.","params":[{"name":"transactionHash","required":true,"schema":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}}],"result":{"name":"transactionReceiptResult","schema":{"title":"receipt","type":"object","description":"The receipt of a transaction","required":["blockHash","blockNumber","contractAddress","cumulativeGasUsed","from","gasUsed","logs","logsBloom","to","transactionHash","transactionIndex"],"properties":{"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"contractAddress":{"title":"ReceiptContractAddress","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}],"description":"The contract address created, if the transaction was a contract creation, otherwise null"},"cumulativeGasUsed":{"title":"ReceiptCumulativeGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The gas units used by the transaction"},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gasUsed":{"title":"ReceiptGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total gas used by the transaction"},"logs":{"title":"logs","type":"array","description":"An array of all the logs triggered during the transaction","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}},"logsBloom":{"title":"bloomFilter","type":"string","description":"A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"postTransactionState":{"title":"ReceiptPostTransactionState","type":"string","description":"The intermediate stateRoot directly after transaction execution.","pattern":"^0x[a-fA-F\\d]{64}$"},"status":{"title":"ReceiptStatus","description":"Whether or not the transaction threw an error.","type":"boolean"}}}},"examples":[{"name":"getTransactionDataAndReceiptExample","params":[{"name":"TransactionHash","value":"0x721d0a535b12189e5a47d541f82a006cb99578d877ee344a567714026e6a8a66"}],"result":{"name":"getTransactionDataAndReceiptResultExample","value":[{"receipt":{"blockHash":"0x07a1461646f20a2ff283ef211805002d2624715b1718d015040ff323e1db053f","blockNumber":"0x9252a9","contractAddress":null,"cumulativeGasUsed":"0x5087553","from":"0xea0a6e3c511bbd10f4519ece37dc24887e11b55d","gasUsed":"0x42fe","logs":[{"address":"0x0000000000000000000000000000000000001000","topics":["0x93a090ecc682c002995fad3c85b30c5651d7fd29b0be5da9d784a3302aedc055","0x000000000000000000000000ea0a6e3c511bbd10f4519ece37dc24887e11b55d"],"data":"0x000000000000000000000000000000000000000000000000084e3a05811a0df3","blockNumber":"0x9252a9","transactionHash":"0x721d0a535b12189e5a47d541f82a006cb99578d877ee344a567714026e6a8a66","transactionIndex":"0x1fd","blockHash":"0x0000000000000000000000000000000000000000000000000000000000000000","logIndex":"0x53f","removed":false}],"logsBloom":"0xstatus":"0x1","to":"0x0000000000000000000000000000000000001000","transactionHash":"0x721d0a535b12189e5a47d541f82a006cb99578d877ee344a567714026e6a8a66","transactionIndex":"0x1fd"},"txData":{"blockHash":"0x07a1461646f20a2ff283ef211805002d2624715b1718d015040ff323e1db053f","blockNumber":"0x9252a9","from":"0xea0A6E3c511bbD10f4519EcE37Dc24887e11b55d","gas":"0x7fffffffffffffff","gasPrice":"0x0","hash":"0x721d0a535b12189e5a47d541f82a006cb99578d877ee344a567714026e6a8a66","input":"0xf340fa01000000000000000000000000ea0a6e3c511bbd10f4519ece37dc24887e11b55d","nonce":"0x73387","r":"0x983118fe4d405d3c3d85a1c7c1cb77cc9926f78aecd3e02e03452c8c4b886fed","s":"0x329d0dd3fa159accf8271aa9ce4ce558d68c6e906a1c601719f2bcedb116699c","to":"0x0000000000000000000000000000000000001000","transactionIndex":"0x1fd","v":"0x94","value":"0x84e3a05811a0df3"}}]}}]},{"name":"eth_getTransactionCount","summary":"Returns the number of transactions sent from an address","params":[{"name":"address","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"transactionCount","schema":{"title":"nonceOrNull","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getTransactionCountExample","params":[{"name":"Address","value":"0x8894E0a0c962CB723c1976a4421c95949bE2D4E3"},{"name":"BlockNumber","value":"latest"}],"result":{"name":"getTransactionCountResultExample","value":"0x104a53"}}]},{"name":"eth_getTransactionReceipt","summary":"Returns the receipt information of a transaction by its hash.","params":[{"name":"transactionHash","required":true,"schema":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}}],"result":{"name":"transactionReceiptResult","description":"returns either a receipt or null","schema":{"title":"transactionReceiptOrNull","oneOf":[{"title":"receipt","type":"object","description":"The receipt of a transaction","required":["blockHash","blockNumber","contractAddress","cumulativeGasUsed","from","gasUsed","logs","logsBloom","to","transactionHash","transactionIndex"],"properties":{"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"contractAddress":{"title":"ReceiptContractAddress","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}],"description":"The contract address created, if the transaction was a contract creation, otherwise null"},"cumulativeGasUsed":{"title":"ReceiptCumulativeGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The gas units used by the transaction"},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gasUsed":{"title":"ReceiptGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total gas used by the transaction"},"logs":{"title":"logs","type":"array","description":"An array of all the logs triggered during the transaction","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}},"logsBloom":{"title":"bloomFilter","type":"string","description":"A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"postTransactionState":{"title":"ReceiptPostTransactionState","type":"string","description":"The intermediate stateRoot directly after transaction execution.","pattern":"^0x[a-fA-F\\d]{64}$"},"status":{"title":"ReceiptStatus","description":"Whether or not the transaction threw an error.","type":"boolean"}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getTransactionReceiptExample","params":[{"name":"TransactionHash","value":"0x5508f1e4304cdc7d1f601e8e0322629ddcfb4ad1b1858d09e6c0b78bc097e863"}],"result":{"name":"getTransactionReceiptResultExample","value":{"blockHash":"0xde6533bd819945cbee552728721a8bef25279ead24de58fe17f34e7c063abed3","blockNumber":"0x6ef8d5","contractAddress":null,"cumulativeGasUsed":"0x3697da5","from":"0xa525121b54c473e3071ce15dba622d5e23970ed3","gasUsed":"0x5208","logs":[],"logsBloom":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","status":"0x1","to":"0x71c7656ec7ab88b098defb751b7401b5f6d8976f","transactionHash":"0x5508f1e4304cdc7d1f601e8e0322629ddcfb4ad1b1858d09e6c0b78bc097e863","transactionIndex":"0x1b7","type":"0x0"}}}]},{"name":"eth_getProof","summary":"Returns the account- and storage-values of the specified account including the Merkle-proof.","params":[{"name":"address","description":"The address of the account or contract","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"storageKeys","required":true,"schema":{"title":"storageKeys","description":"A storage key is indexed from the solidity compiler by the order it is declared. For mappings it uses the keccak of the mapping key with its position (and recursively for X-dimensional mappings)","items":{"title":"storageProofKey","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The key used to get the storage slot in its account tree."}}},{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}}],"result":{"name":"account","schema":{"title":"proofAccountOrNull","oneOf":[{"title":"proofAccount","type":"object","description":"The merkle proofs of the specified account connecting them to the blockhash of the block specified","properties":{"address":{"title":"proofAccountAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The address of the account or contract of the request"},"accountProof":{"title":"proofNodes","type":"array","description":"The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value","items":{"title":"proofNode","type":"string","description":"An individual node used to prove a path down a merkle-patricia-tree","pattern":"^0x([a-fA-F0-9]?)+$"}},"balance":{"title":"proofAccountBalance","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The Ether balance of the account or contract of the request"},"codeHash":{"title":"proofAccountCodeHash","type":"string","description":"The code hash of the contract of the request (keccak(NULL) if external account)","pattern":"^0x[a-fA-F\\d]{64}$"},"nonce":{"title":"proofAccountNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The transaction count of the account or contract of the request"},"storageHash":{"title":"proofAccountStorageHash","type":"string","description":"The storage hash of the contract of the request (keccak(rlp(NULL)) if external account)","pattern":"^0x[a-fA-F\\d]{64}$"},"storageProof":{"title":"storageProofSet","type":"array","description":"Current block header PoW hash.","items":{"title":"storageProof","type":"object","description":"Object proving a relationship of a storage value to an account's storageHash.","properties":{"key":{"title":"storageProofKey","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The key used to get the storage slot in its account tree."},"value":{"title":"storageProofValue","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The value of the storage slot in its account tree"},"proof":{"title":"proofNodes","type":"array","description":"The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value","items":{"title":"proofNode","type":"string","description":"An individual node used to prove a path down a merkle-patricia-tree","pattern":"^0x([a-fA-F0-9]?)+$"}}}}}}},{"title":"null","type":"null","description":"Null"}]}},"examples":[{"name":"getProofExample","params":[{"name":"Address","value":"0x7F0d15C7FAae65896648C8273B6d7E43f58Fa842"},{"name":"StorageProofKey","value":["0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421"]},{"name":"BlockNumber","value":"latest"}],"result":{"name":"getProofResultExample","value":{"address":"0x7f0d15c7faae65896648c8273b6d7e43f58fa842","accountProof":["0xf90211a0c6136d4faaadcff41adc1e76b31639bd02744056fbd03a56d19ad8eb48d49aeda012b64c34e327e0aeadba1cb7da4a57f1ada0b30808eb7dc625c2c2ddc20fdabba046144abc9842fd41bd2ef61da1af684abf7805f2e7ccd0cb18a9c3db222190f8a0e97afd852d9d70bb16830969ff2c3430c8a313f630c3683d14b5806b4fc151cda080f546479e166c67e523e39b9369a8e81626bf2a81bb55e2d18bb409bcc2fe3ba0e5ae78c0b64d9eb53ed324c36de1102ce528348e8dcec16b8267d4dfd4ff140aa05a18498f07028612becd56ac4cb3331635d2c78335b44c0c4c9a6e9938724f05a0070eb5bd09d9ca36420ba18c9b771a3ef3e4c54bdf5f68932589ec00ca70d2d9a0063746cc928334c03950fbab6860338bc282e298b3a91dff6219fe3eb28a52aaa0146f794bdf150d75795561e1c6f8630ce46eefd4d6be519cd83f537eef03c00ba02ff78f15a521a9b1d940095dfce11cdaff98096c47dcf2f6e845ee3e9675d381a01bc19f22d5bdbbc34b17e029a66d8107d115cd42e73514be65c131790cbb385ba08541d6427330427c5ee6cfa2687ccd125a7e9320e1dbd7817f2da8ed107109f9a0119671b455c6c4ba573ffba23faf01b5cac2a29c96d0d42e9655964b809e959aa0e88293a444e61f3e1016da17518cdca3a4e36b40ec50779d88faf49cdeceb11da02d3f8cd3c53ad9fd33ae40ea939b0a11257f5d3f73d965d8e4dd539f371d1d3d80","0xf90211a0141f31e3754da3017e912bb8e14f1e23b870966fe491478ff752e2cd1528d24ea0a8ac1bb20bfdbe650f621f42a29312829d737e2f67a3cf12cbd1a5ccbc7c91d9a02a56282cca89b85605ab2b16ac32331dc93281b50c0084acb22b49e539d1a2f2a0d068312c572c955804b0019bb2fd6fa6fdefac826031a9573cfd616d2554189aa0a750660bdf130aa2a83da5deb8c98ccdab0c2997ba8dc357964222c54797716ba001787179a59d8d9ce189ba7dbf4d46cfb7a16e894a2cbb421d32fb83a8e85cefa0e4ee9a1f65bb62d580fd66be75e5ba76370d26a2519027b61c3fb0238ee5cbc2a054d76f361587373679ac9883de616e8068e004f245c5b533738b8211483f8a4aa0c6ffec65c21f78b82ed307899531f9db53d85d5aa34278dea87e6f981277c0e8a04629a1a2972ea668e91fed4e36106251603516191c45ac30091c043f641f95f8a00c01c04dd85c9338d06fb0edf18035ace4dea5a24670994ab31947e29266a515a06b9a64ba1b5ef0a412180a907f46bc40906d859e63a010b8ee918d78b5ebabc2a08c25ee2da45f0738665f8205568dc79719f09446945eb61682c0c17db82b95c3a0a11bf9b523234f8b2a397472f1e718ddcf8162fd30142925c6dedbca54de8871a0264cfedf1994583330555c705456e2ae6c06b0a6e2a90a2f5abcdfeb9ed7a15aa0a2b0752ee4e29f75c2a0d5c5a1afc6ffd0e5b724f3dd5368e3573f7fed114e8980","0xf90211a065b1f89e8f3178daf33f502ad42d2d82cdd16a29f39011eca46514c1084f1570a04e2920954036e4e7ad1f816ccf76e91e86df2b8177b4d32cb07dd98b85957cbfa0d4f65f3d8a60d24e136c312f7f2c953db5b4419fbd052000c4ca50c11ab92159a03aa8bd5a46d3db5d1f1f45b24699c0ce95800121e2979fc6437d2864eeae3f3ea03bc77df3c62fe0b01daeb7bf0577cd15764731491165844d9ebb2083eda7a455a09430fcee666482669d16d6ecd806a6b73e33a8520e40b3eb0d005ab4a60e5927a00f44579df110852d3340530ad8e77bd0fb915514ed041339e8f954b2ee7fe313a01050224b76ee103abd265f55a7f9095c0f9c58aa24b3d2977c49e75b9e0e3553a0ee863c8f44896d4419522111c3a6c8e16f9f6d5ba69e8f3332730994f694ae7ea037871e130925b09d87e9d6cbf7a440920766566857f5d4f037fd4a158835b9a0a0c31b948e3292ea70c9babdd09d9802084d5d63a7b0c793c04430bf693991b376a09767751aeca4a79a299a377cbed4b2ad215a3db18e8e7fbd6b181f21b0fe379ca08815edb8ace19f8be0f27cff55c74c7b584639c73ef6661926d4d35e1678f19aa0172fc96a85a51aa697041955d94e4e82bb882d697336736a32de4a29e6821cf1a099b0774571c54d716abc7781182b9bc1fbb3dd5f25ac7642a34a9fdf76328364a07e5edb118d412f6c0e136e1c0f4c0a6b1200433aa1f3a40a2139b28bf970033780","0xf90211a0f772e4c76f63802fefa8a9959f79284f9af34144265c06ea6806f4614456f60ca0e66ebd282ab9926858ff8a8e8a94f38df5d5f3a3fe4c35e055acccf5379a3c74a024c699a866ad69768a542425ca17b7ed2cf0f3bbc7a33d5d6e6ded47e264bcd1a01319d0fab0d9fd7e6c68dd9b4211e5b2ed83004f453ad89167bd9edb34c0f1e9a00e51dd48f49552a9c1b509a43256ee7e250d55ccee86e4d501c6bcd48e7d4b25a09ede44cdf134fcb9c00665265d18630522b5db66c69ea6d67dd01bd059d1f8a8a0b79b04bbf94ecec9c4fce601fb8b30e15ca402e908827c3e2b827c9d22ff5caaa0274651d2bd5acf810588ed8eafe8f3debb8f8d6adb346101b00c4d5bb7110dbea0a11ea78c3ef8cd1431325713ce65d2c85b0b9c269a20e84a07f3b4df7f9d547ba0c8264ffbe9e5ffafa855f54c203c0b414206d90f8777d8a5f46e68574347b2fea04569276cdcbb8427352321da1c8d7a306d8ecb3999566dc4fdfa5a82b6b7095ea060f4d1eae9a69a96acbf550eb7b8e5c41b467a06f6ce4be7803d27aa80545deca09bbb4844b066114fea06453aeca616a4bbed0088002d249f09f4e0ec3f1ef879a02938a639d641014304dd7aaf8e291643ba309ca9673d39ea0939e6ade2d17032a01abdd5a15974d82eec420bb54412855213e37fffcca50f6e96cd153ca9d9bd67a017cea253831e322f0475f85a70959cb914a55f62891a050422f0f85129d6fd4780","0xf90211a005cc82f9c13ec65172384d8a07a7ee07341d61ec3ba61120e6919713c80d199ea04f05933878c47449a7e409ed357fe5688328f685d9a75df8fef7edb31e9b0a36a0a5ef2c8bd6423a0e25b14bfff0cc07adfbdf176e5d1274a4f1e21859cc5fca80a06429f0a1c6d254b95fe8e4efeeb5d725a0ed1d18911eefe19d7665d8785b0df1a09f1ae0145d7cd84739dbbd4ba85fba33b7c253151a3e8cd596aa162a4e7fe7e4a0685e281cc20c27a09822d18f47e6b223804eb5e6b8b3ef758e514881c59b9c2da093c07626b937fd1d042e03eeba97cdc9a1dc26682cbd0a714a8b6cbe2c7d3939a0bd4766fe6916b87f68d7a5d36d2d993ce6962e51237d28728c769a734b85fcafa00f77975014e79572edb1526cd21311419d46de3376098ee37a19a8b709ef817ea059bd083d15de5c44ce4be1f62197a1b6638955bc721f715659cf6f5e7769f8d3a06d3b3ed55033f44f58d6d5d675fbb430cc366d029406ac7155f05e5b779898f0a0c989328fe3e5158f35e8b6a59a477cc35e487cf8e816b22e13ea56944d5f5e0aa081aa1fe419212dd4d8e2da040205264eaae211c981f4bb0e78708cbc7d27bed1a098cb0883ea3a2cf36ae42cc300bf2aeb10b494609a1701686676d5626a49b772a0124925db35502bd3969bc8e740f59ba6af4b8f3a4916ebc4ea52ece5857d69f4a00c56572bbdd10ba4578d1ae1e0f60bbccc70bf5a80f71771d82363ff10e259e980","0xf901f1a0937f535844f2457f71ab0511de66dfa8a5aadd399152cdc0ba626a6a3b406167a0f7285f51d087f9fdd97ce14c40850b8454b8724e0f2237b7cdb77851d84ced88a0b4a0f93df07c7caf1994494840274ed84ef411087591b6cfceabc687a3a8423ba06f8793026386d6c8671cbd9d708dc051c72d29e6887eb25e84c83c84cd04497da0f11e157adc7cebc6964a27ad159c2acdd66a25569f56dbfbb117001b868a8de7a0977fab75a352a714620b11b293006d0cd68ad494f6792989beec457b997edfafa09140c0191304ada62a9a58422b2adc6c77d90072b8b765fb768b0b4c56edc766a0d5c903914e4d4211ae7670bbc1e210ab43afc4e334da4703e54b791f4e89142ca04b9b9b7505faf647ed21edd119174d117b4d8855cc722178cd5b53bcd3fa2849a0b9430ae22217bad6ed38b66f45abff009cb33757692e45369a1cc836f25354cea05e8b1c8428c828528283c22985f5458a68015ee124421683aadba36d32091ca080a0348270cc35ba3ab90b79636b6572eba627ab32b0db9f4bb32e775e0de9cb95f6a0756bc4e8e7c62e0ef3e2fedca461ca04f4a0984b1dd3fe17d76a8371d0623406a0bfbc54e52031b77dae105eac63fdd3e35bd22dbea943f760f10da5468cd47b05a028838847b1b2840e9fee9ff2884e10c11373517755073b7c1b977220839acea480"],"balance":"0x0","codeHash":"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nonce":"0x0","storageHash":"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421","storageProof":[{"key":"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421","value":"0x0","proof":[]}]}}}]},{"name":"eth_hashrate","summary":"Returns the number of hashes per second that the node is mining with.","params":[],"result":{"name":"hashesPerSecond","description":"Integer of the number of hashes per second","schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}},"examples":[{"name":"hashrateExample","params":[],"result":{"name":"hashrateResultExample","value":"0x0"}}]},{"name":"eth_mining","summary":"Returns true if client is actively mining new blocks.","params":[],"result":{"name":"mining","description":"Whether or not the client is mining","schema":{"type":"boolean"}},"examples":[{"name":"miningExample","params":[],"result":{"name":"miningResultExample","value":false}}]},{"name":"eth_newBlockFilter","summary":"Creates a filter in the node, to notify when a new block arrives. To check if the state has changed, call eth_getFilterChanges.","params":[],"result":{"name":"filterId","schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}},"examples":[{"name":"newBlockFilterExample","params":[],"result":{"name":"newBlockFilterResultExample","value":"0xf5adebe05f049b7577106fa61363f44a"}}]},{"name":"eth_newFilter","summary":"Creates a filter object, based on filter options, to notify when the state changes (logs). To check if the state has changed, call eth_getFilterChanges.","params":[{"name":"filter","required":true,"schema":{"title":"filter","type":"object","description":"A filter used to monitor the blockchain for log/events","properties":{"fromBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"toBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"address":{"title":"oneOrArrayOfAddresses","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}]},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}}}}}],"result":{"name":"filterId","description":"The filter ID for use in `eth_getFilterChanges`","schema":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"}},"examples":[{"name":"newFilterExample","params":[{"name":"Filter","value":{"topics":["0x0000000000000000000000000000000000000000000000000000000012341234"]}}],"result":{"name":"newFilterResultExample","value":"0x3d42119b30039051d2c5910a473c46c0"}}]},{"name":"eth_getFilterChanges","summary":"Polling method for a filter, which returns an array of logs which occurred since last poll.","params":[{"name":"filterId","required":true,"schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}}],"result":{"name":"logResult","schema":{"title":"logResult","type":"array","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}}},"examples":[{"name":"getFilterChangesExample","params":[{"name":"filterId","value":"0xcf4e9670c19fc799f196f814ea8d7838"}],"result":{"name":"getFilterChangesResult","value":[{"address":"0xb5a5f22694352c15b00323844ad545abb2b11028","blockHash":"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de","blockNumber":"0x5d12ab","data":"0x0000000000000000000000000000000000000000000000a247d7a2955b61d000","logIndex":"0x0","removed":false,"topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x000000000000000000000000bdc0afe57b8e9468aa95396da2ab2063e595f37e","0x0000000000000000000000007503e090dc2b64a88f034fb45e247cbd82b8741e"],"transactionHash":"0xa74c2432c9cf7dbb875a385a2411fd8f13ca9ec12216864b1a1ead3c99de99cd","transactionIndex":"0x3"},{"address":"0xe38165c9f6deb144afc9c32c206b024817e1496d","blockHash":"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de","blockNumber":"0x5d12ab","data":"0x0000000000000000000000000000000000000000000000000000000025c6b720","logIndex":"0x3","removed":false,"topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x00000000000000000000000080e73e47173b2d00b531bf83bc39e710157125c3","0x0000000000000000000000008f6cc93795969e5bbbf07c66dfee7d41ad24f1ef"],"transactionHash":"0x9e8f1cb1facb9a11a1cf947634053a0b2d557399f926b12127aa10497a2f0153","transactionIndex":"0x5"}]}}]},{"name":"eth_getFilterLogs","summary":"Returns an array of all logs matching filter with given id.","params":[{"name":"filterId","required":true,"schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}}],"result":{"name":"logs","description":"An array of all logs matching filter with given id.","schema":{"title":"setOfLogs","type":"array","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}}},"examples":[{"name":"getFilterChangesExample","params":[{"name":"filterId","value":"0xcf4e9670c19fc799f196f814ea8d7838"}],"result":{"name":"getFilterChangesResult","value":[{"address":"0xb5a5f22694352c15b00323844ad545abb2b11028","blockHash":"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de","blockNumber":"0x5d12ab","data":"0x0000000000000000000000000000000000000000000000a247d7a2955b61d000","logIndex":"0x0","removed":false,"topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x000000000000000000000000bdc0afe57b8e9468aa95396da2ab2063e595f37e","0x0000000000000000000000007503e090dc2b64a88f034fb45e247cbd82b8741e"],"transactionHash":"0xa74c2432c9cf7dbb875a385a2411fd8f13ca9ec12216864b1a1ead3c99de99cd","transactionIndex":"0x3"},{"address":"0xe38165c9f6deb144afc9c32c206b024817e1496d","blockHash":"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de","blockNumber":"0x5d12ab","data":"0x0000000000000000000000000000000000000000000000000000000025c6b720","logIndex":"0x3","removed":false,"topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x00000000000000000000000080e73e47173b2d00b531bf83bc39e710157125c3","0x0000000000000000000000008f6cc93795969e5bbbf07c66dfee7d41ad24f1ef"],"transactionHash":"0x9e8f1cb1facb9a11a1cf947634053a0b2d557399f926b12127aa10497a2f0153","transactionIndex":"0x5"}]}}]},{"name":"eth_uninstallFilter","summary":"Uninstalls a filter with given id. Should always be called when watch is no longer needed. Additionally Filters timeout when they aren't requested with eth_getFilterChanges for a period of time.","params":[{"name":"filterId","required":true,"schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}}],"result":{"name":"filterUninstalledSuccess","description":"returns true if the filter was successfully uninstalled, false otherwise.","schema":{"type":"boolean"}},"examples":[{"name":"uninstallFilterExample","params":[{"name":"FilterId","value":"0xe921d6875bf20243493e19945c503dc0"}],"result":{"name":"uninstallFilterResultExample","value":true}}]},{"name":"eth_newPendingTransactionFilter","summary":"Creates a filter in the node, to notify when new pending transactions arrive. To check if the state has changed, call eth_getFilterChanges.","params":[],"result":{"name":"filterId","schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}},"examples":[{"name":"newPendingTransactionFilterExample","params":[],"result":{"name":"newPendingTransactionFilterResultExample","value":"0xcf0f2b5149022a2cecd03923282550cd"}}]},{"name":"eth_pendingTransactions","summary":"Returns the transactions that are pending in the transaction pool and have a from address that is one of the accounts this node manages.","params":[],"result":{"name":"pendingTransactions","schema":{"title":"transactions","description":"An array of transactions","type":"array","items":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}}}},{"name":"eth_sign","summary":"Returns an EIP-191 signature over the provided data.","params":[{"name":"Address","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},{"name":"Message","required":true,"schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}}],"result":{"name":"Signature","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}}},{"name":"eth_signTransaction","summary":"Returns an RLP encoded transaction signed by the specified account.","params":[{"name":"Transaction","required":true,"schema":{"title":"Transaction object with sender","type":"object","allOf":[{"required":["from"],"properties":{"from":{"title":"from","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},"title":"any_r7vdx79W"},{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}]}}],"result":{"name":"Encoded transaction","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}}},{"name":"eth_sendTransaction","summary":"Signs and submits a transaction.","params":[{"name":"Transaction","required":true,"schema":{"title":"Transaction object with sender","type":"object","allOf":[{"required":["from"],"properties":{"from":{"title":"from","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},"title":"any_r7vdx79W"},{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}]}}],"result":{"name":"Transaction hash","schema":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}}},{"name":"eth_sendRawTransaction","summary":"Creates new message call transaction or a contract creation for signed transactions.","params":[{"name":"signedTransactionData","required":true,"description":"The signed transaction data","schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}}],"result":{"name":"transactionHash","description":"The transaction hash, or the zero hash if the transaction is not yet available.","schema":{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"}}},{"name":"eth_syncing","summary":"Returns an object with data about the sync status or false.","params":[],"result":{"name":"syncing","schema":{"title":"isSyncingResult","oneOf":[{"title":"syncingData","description":"An object with sync status data","type":"object","properties":{"startingBlock":{"title":"syncingDataStartingBlock","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Block at which the import started (will only be reset, after the sync reached his head)"},"currentBlock":{"title":"syncingDataCurrentBlock","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The current block, same as eth_blockNumber"},"highestBlock":{"title":"syncingDataHighestBlock","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The estimated highest block"},"knownStates":{"title":"syncingDataKnownStates","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The known states"},"pulledStates":{"title":"syncingDataPulledStates","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The pulled states"}}},{"type":"boolean","title":"boolean_vyG3AETh"}]}},"examples":[{"name":"syncingExample","params":[],"result":{"name":"syncingResultExample","value":false}}]},{"name":"eth_subscribe","summary":"If successful this returns the subscription id. Subscriptions are creates with a regular RPC call with eth_subscribe as method and the subscription name as first parameter. ","params":[{"name":"subscriptioName","schema":{"type":"string","title":"string_doaGddGA"}},{"name":"optionalArguments ","schema":{"type":"array","items":{"type":"object","title":"object_HAgrRKSz"},"title":"unorderedSetOf_object_HAgrRKSzAfoBnX12"}}],"result":{"name":"subscribeExample","schema":{"type":"string"}}},{"name":"eth_unsubscribe","summary":"Subscriptions are cancelled with a regular RPC call with eth_unsubscribe as method and the subscription id as first parameter.","params":[{"name":"subscriptionId","schema":{"type":"string","title":"string_doaGddGA"}}],"result":{"name":"unsubscribeExample","schema":{"type":"boolean"}}}],"components":{"schemas":{"TransactionWithSender":{"title":"Transaction object with sender","type":"object","allOf":[{"required":["from"],"properties":{"from":{"title":"from","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},"title":"any_r7vdx79W"},{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}]},"ProofNode":{"title":"proofNode","type":"string","description":"An individual node used to prove a path down a merkle-patricia-tree","pattern":"^0x([a-fA-F0-9]?)+$"},"StorageProofKey":{"title":"storageProofKey","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The key used to get the storage slot in its account tree."},"StorageProof":{"title":"storageProofSet","type":"array","description":"Current block header PoW hash.","items":{"title":"storageProof","type":"object","description":"Object proving a relationship of a storage value to an account's storageHash.","properties":{"key":{"title":"storageProofKey","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The key used to get the storage slot in its account tree."},"value":{"title":"storageProofValue","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The value of the storage slot in its account tree"},"proof":{"title":"proofNodes","type":"array","description":"The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value","items":{"title":"proofNode","type":"string","description":"An individual node used to prove a path down a merkle-patricia-tree","pattern":"^0x([a-fA-F0-9]?)+$"}}}}},"ProofNodes":{"title":"proofNodes","type":"array","description":"The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value","items":{"title":"proofNode","type":"string","description":"An individual node used to prove a path down a merkle-patricia-tree","pattern":"^0x([a-fA-F0-9]?)+$"}},"PowHash":{"title":"powHash","type":"string","description":"Current block header PoW hash.","pattern":"^0x([a-fA-F\\d]{64})?$"},"SeedHash":{"title":"seedHash","type":"string","description":"The seed hash used for the DAG.","pattern":"^0x([a-fA-F\\d]{64})?$"},"MixHash":{"title":"mixHash","type":"string","description":"The mix digest.","pattern":"^0x([a-fA-F\\d]{64})?$"},"Difficulty":{"title":"difficulty","type":"string","description":"The boundary condition ('target'), 2^256 / difficulty.","pattern":"^0x([a-fA-F\\d]{64})?$"},"FilterId":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."},"BlockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"BlockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"BlockNumberTag":{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]},"BlockOrNull":{"title":"blockOrNull","oneOf":[{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}},{"title":"null","type":"null","description":"Null"}]},"IntegerOrNull":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]},"AddressOrNull":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"Receipt":{"title":"receipt","type":"object","description":"The receipt of a transaction","required":["blockHash","blockNumber","contractAddress","cumulativeGasUsed","from","gasUsed","logs","logsBloom","to","transactionHash","transactionIndex"],"properties":{"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"contractAddress":{"title":"ReceiptContractAddress","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}],"description":"The contract address created, if the transaction was a contract creation, otherwise null"},"cumulativeGasUsed":{"title":"ReceiptCumulativeGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The gas units used by the transaction"},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gasUsed":{"title":"ReceiptGasUsed","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total gas used by the transaction"},"logs":{"title":"logs","type":"array","description":"An array of all the logs triggered during the transaction","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}},"logsBloom":{"title":"bloomFilter","type":"string","description":"A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"postTransactionState":{"title":"ReceiptPostTransactionState","type":"string","description":"The intermediate stateRoot directly after transaction execution.","pattern":"^0x[a-fA-F\\d]{64}$"},"status":{"title":"ReceiptStatus","description":"Whether or not the transaction threw an error.","type":"boolean"}}},"BloomFilter":{"title":"bloomFilter","type":"string","description":"A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series"},"Log":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}},"Topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"Topic":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"},"TransactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"BlockNumberOrNull":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"BlockHashOrNull":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"NonceOrNull":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"From":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"To":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"Block":{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}},"Transaction":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},"Transactions":{"title":"transactions","description":"An array of transactions","type":"array","items":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}},"TransactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"KeccakOrPending":{"title":"keccakOrPending","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}]},"Keccak":{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},"Nonce":{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},"Null":{"title":"null","type":"null","description":"Null"},"Integer":{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},"Address":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},"Addresses":{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},"Position":{"title":"position","type":"string","description":"Hex representation of the storage slot where the variable exists","pattern":"^0x([a-fA-F0-9]?)+$"},"DataWord":{"title":"dataWord","type":"string","description":"Hex representation of a 256 bit unit of data","pattern":"^0x([a-fA-F\\d]{64})?$"},"Bytes":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"contentDescriptors":{"Addresses":{"name":"addresses","schema":{"type":"array","description":"List of addresses","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}},"Block":{"name":"block","summary":"A block","description":"A block object","schema":{"title":"Block","description":"The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.","type":"object","properties":{"number":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"hash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"parentHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"nonce":{"title":"nonceOrNull","description":"Randomly selected number to satisfy the proof-of-work or null when its the pending block","oneOf":[{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"},{"title":"null","type":"null","description":"Null"}]},"sha3Uncles":{"title":"blockShaUncles","type":"string","description":"Keccak hash of the uncles data in the block","pattern":"^0x[a-fA-F\\d]{64}$"},"logsBloom":{"title":"blockLogsBloom","type":"string","description":"The bloom filter for the logs of the block or null when its the pending block","pattern":"^0x[a-fA-F\\d]+$"},"transactionsRoot":{"title":"blockTransactionsRoot","type":"string","description":"The root of the transactions trie of the block.","pattern":"^0x[a-fA-F\\d]{64}$"},"stateRoot":{"title":"blockStateRoot","type":"string","description":"The root of the final state trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"receiptsRoot":{"title":"blockReceiptsRoot","type":"string","description":"The root of the receipts trie of the block","pattern":"^0x[a-fA-F\\d]{64}$"},"miner":{"title":"addressOrNull","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"difficulty":{"title":"blockDifficulty","type":"string","description":"Integer of the difficulty for this block"},"totalDifficulty":{"title":"blockTotalDifficulty","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"Integer of the total difficulty of the chain until this block"},"extraData":{"title":"blockExtraData","type":"string","description":"The 'extra data' field of this block"},"size":{"title":"blockSize","type":"string","description":"Integer the size of this block in bytes"},"gasLimit":{"title":"blockGasLimit","type":"string","description":"The maximum gas allowed in this block"},"gasUsed":{"title":"blockGasUsed","type":"string","description":"The total used gas by all transactions in this block"},"timestamp":{"title":"blockTimeStamp","type":"string","description":"The unix timestamp for when the block was collated"},"transactions":{"title":"transactionsOrHashes","description":"Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter","type":"array","items":{"title":"transactionOrTransactionHash","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}]}},"uncles":{"title":"uncleHashes","description":"Array of uncle hashes","type":"array","items":{"title":"uncleHash","type":"string","description":"Block hash of the RLP encoding of an uncle block","pattern":"^0x[a-fA-F\\d]{64}$"}}}}},"Null":{"name":"Null","description":"JSON Null value","summary":"Null value","schema":{"title":"null","type":"null","description":"Null"}},"Signature":{"name":"signature","summary":"The signature.","required":true,"schema":{"title":"signatureBytes","type":"string","description":"Hex representation of byte array between 2 and 65 chars long","pattern":"0x^([A-Fa-f0-9]{2}){65}$"}},"GasPrice":{"name":"gasPrice","required":true,"schema":{"title":"gasPriceResult","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Integer of the current gas price"}},"Transaction":{"required":true,"name":"transaction","schema":{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}}},"TransactionResult":{"name":"transactionResult","description":"Returns a transaction or null","schema":{"title":"TransactionOrNull","oneOf":[{"title":"transaction","type":"object","required":["gas","gasPrice","nonce"],"properties":{"blockHash":{"title":"blockHashOrNull","oneOf":[{"title":"keccak","type":"string","description":"Hex representation of a Keccak 256 hash","pattern":"^0x[a-fA-F\\d]{64}$"},{"title":"null","type":"null","description":"Null"}],"description":"The block hash or null when its the pending block"},"blockNumber":{"title":"blockNumberOrNull","description":"The block number or null when its the pending block","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"null","type":"null","description":"Null"}]},"from":{"title":"From","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"The sender of the transaction"},"gas":{"title":"transactionGas","type":"string","description":"The gas limit provided by the sender in Wei"},"gasPrice":{"title":"transactionGasPrice","type":"string","description":"The gas price willing to be paid by the sender in Wei"},"hash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"input":{"title":"transactionInput","type":"string","description":"The data field sent with the transaction"},"nonce":{"title":"transactionNonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The total number of prior transactions made by the sender"},"to":{"title":"To","description":"Destination address of the transaction. Null if it was a contract create.","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"null","type":"null","description":"Null"}]},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"},"value":{"title":"transactionValue","type":"string","description":"Value of Ether being transferred in Wei","pattern":"^0x[a-fA-F\\d]{64}$"},"v":{"title":"transactionSigV","type":"string","description":"ECDSA recovery id"},"r":{"title":"transactionSigR","type":"string","description":"ECDSA signature r"},"s":{"title":"transactionSigS","type":"string","description":"ECDSA signature s"}}},{"title":"null","type":"null","description":"Null"}]}},"UncleCountResult":{"name":"uncleCountResult","description":"The Number of total uncles in the given block","schema":{"title":"integerOrNull","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}]}},"Message":{"name":"message","required":true,"schema":{"title":"bytes","type":"string","description":"Hex representation of a variable length byte array","pattern":"^0x([a-fA-F0-9]?)+$"}},"Filter":{"name":"filter","required":true,"schema":{"title":"filter","type":"object","description":"A filter used to monitor the blockchain for log/events","properties":{"fromBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"toBlock":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"address":{"title":"oneOrArrayOfAddresses","oneOf":[{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"},{"title":"addresses","type":"array","description":"List of contract addresses from which to monitor events","items":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}}]},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}}}}},"Address":{"name":"address","required":true,"schema":{"title":"address","type":"string","pattern":"^0x[a-fA-F\\d]{40}$"}},"BlockHash":{"name":"blockHash","required":true,"schema":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"}},"Nonce":{"name":"nonce","required":true,"schema":{"title":"nonce","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"A number only to be used once"}},"Position":{"name":"key","required":true,"schema":{"title":"position","type":"string","description":"Hex representation of the storage slot where the variable exists","pattern":"^0x([a-fA-F0-9]?)+$"}},"Logs":{"name":"logs","description":"An array of all logs matching filter with given id.","schema":{"title":"setOfLogs","type":"array","items":{"title":"log","type":"object","description":"An indexed event generated during a transaction","properties":{"address":{"title":"LogAddress","type":"string","pattern":"^0x[a-fA-F\\d]{40}$","description":"Sender of the transaction"},"blockHash":{"title":"blockHash","type":"string","pattern":"^0x[a-fA-F\\d]{64}$","description":"The hex representation of the Keccak 256 of the RLP encoded block"},"blockNumber":{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},"data":{"title":"LogData","type":"string","description":"The data/input string sent along with the transaction","pattern":"^0x([a-fA-F0-9]?)+$"},"logIndex":{"title":"LogIndex","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The index of the event within its transaction, null when its pending"},"removed":{"title":"logIsRemoved","description":"Whether or not the log was orphaned off the main chain","type":"boolean"},"topics":{"title":"LogTopics","description":"Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.","type":"array","items":{"title":"topic","type":"string","description":"32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256))","pattern":"^0x([a-fA-F\\d]{64})?$"}},"transactionHash":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"},"transactionIndex":{"title":"transactionIndex","oneOf":[{"title":"integer","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Hex representation of the integer"},{"title":"null","type":"null","description":"Null"}],"description":"The index of the transaction. null when its pending"}}}}},"FilterId":{"name":"filterId","schema":{"title":"filterId","type":"string","description":"An identifier used to reference the filter."}},"BlockNumber":{"name":"blockNumber","required":true,"schema":{"title":"blockNumberOrTag","oneOf":[{"title":"blockNumber","type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"The hex representation of the block's height"},{"title":"blockNumberTag","type":"string","description":"The optional block height description","enum":["earliest","latest","pending"]}]}},"TransactionHash":{"name":"transactionHash","required":true,"schema":{"title":"transactionHash","type":"string","description":"Keccak 256 Hash of the RLP encoding of a transaction","pattern":"^0x[a-fA-F\\d]{64}$"}}}}} ;
  public transport: HTTPTransport | WebSocketTransport | PostMessageWindowTransport | PostMessageIframeTransport;
  private validator: MethodCallValidator;
  private timeout: number | undefined;

  constructor(options: Options) {

    if (options.transport === undefined || options.transport.type === undefined) {
      throw new Error("Invalid constructor params");
    }
    const {type, host, port, protocol} = options.transport;
    let path = options.transport.path || "";
    if(path && path[0] !== "/") {
        path = "/" + path;
    }
    switch (type) {
      case 'http':
      case 'https':
        this.transport = new HTTPTransport((protocol || type) + "://" + host + ":" + port + path);
        break;
      case 'websocket':
        this.transport = new WebSocketTransport((protocol || "ws://") + host + ":" + port + path);
        break;
      case 'postmessageiframe':
        this.transport = new PostMessageIframeTransport(protocol + "://" + host + ":" + port + path);
        break;
      case 'postmessagewindow':
        this.transport = new PostMessageWindowTransport(protocol + "://" + host + ":" + port + path);
        break;
      default:
        throw new Error("unsupported transport");
        break;
    }
    this.rpc = new Client(new RequestManager([this.transport]));
    this.validator = new MethodCallValidator(BinanceSmartChainJSONRPCSpecification.openrpcDocument);
  }
  /**
   * Adds a JSONRPC notification handler to handle receiving notifications.
   * @example
   * myClient.onNotification((data)=>console.log(data));
   */
  public onNotification(callback: (data: any) => void) {
    this.rpc.onNotification(callback);
  }

  /**
   * Adds an optional JSONRPCError handler to handle receiving errors that cannot be resolved to a specific request
   * @example
   * myClient.onError((err: JSONRPCError)=>console.log(err.message));
   */
  public onError(callback: (data: JSONRPCError) => void) {
     this.rpc.onError(callback);
  }

  /**
   * Sets a default timeout in ms for all requests excluding notifications.
   * @example
   * // 20s timeout
   * myClient.setDefaultTimeout(20000);
   * // Removes timeout from request
   * myClient.setDefaultTimeout(undefined);
   */
   public setDefaultTimeout(ms?: number) {
    this.timeout = ms;
  }

  /**
   * Initiates [[BinanceSmartChainJSONRPCSpecification.startBatch]] in order to build a batch call.
   *
   * Subsequent calls to [[BinanceSmartChainJSONRPCSpecification.request]] will be added to the batch.
   * Once [[BinanceSmartChainJSONRPCSpecification.stopBatch]] is called, the promises for the [[BinanceSmartChainJSONRPCSpecification.request]]
   * will then be resolved.  If there is already a batch in progress this method is a noop.
   *
   * @example
   * myClient.startBatch();
   * myClient.foo().then(() => console.log("foobar"))
   * myClient.bar().then(() => console.log("foobarbaz"))
   * myClient.stopBatch();
   */
  public startBatch(): void {
    return this.rpc.startBatch();
  }

  /**
   * Initiates [[Client.stopBatch]] in order to finalize and send the batch to the underlying transport.
   *
   * stopBatch will send the [[BinanceSmartChainJSONRPCSpecification]] calls made since the last [[BinanceSmartChainJSONRPCSpecification.startBatch]] call. For
   * that reason, [[BinanceSmartChainJSONRPCSpecification.startBatch]] MUST be called before [[BinanceSmartChainJSONRPCSpecification.stopBatch]].
   *
   * @example
   * myClient.startBatch();
   * myClient.foo().then(() => console.log("foobar"))
   * myClient.bar().then(() => console.log("foobarbaz"))
   * myClient.stopBatch();
   */
  public stopBatch(): void {
    return this.rpc.stopBatch();
  }

  private request(methodName: string, params: any[]): Promise<any> {
    const methodObject = _.find(BinanceSmartChainJSONRPCSpecification.openrpcDocument.methods, ({name}) => name === methodName) as MethodObject;
    const notification = methodObject.result ? false : true;
    const openRpcMethodValidationErrors = this.validator.validate(methodName, params);
    if ( openRpcMethodValidationErrors instanceof MethodNotFoundError || openRpcMethodValidationErrors.length > 0) {
      return Promise.reject(openRpcMethodValidationErrors);
    }

    let rpcParams;
    if (methodObject.paramStructure && methodObject.paramStructure === "by-name") {
      rpcParams = _.zipObject(params, _.map(methodObject.params, "name"));
    } else {
      rpcParams = params;
    }
    if (notification) {
      return this.rpc.notify({method: methodName, params: rpcParams});
    }
    return this.rpc.request({method: methodName, params: rpcParams}, this.timeout);
  }

  
  /**
   * current client version
   */
  // tslint:disable-next-line:max-line-length
  public web3_clientVersion: Web3ClientVersion = (...params) => {
    return this.request("web3_clientVersion", params);
  }
  
  /**
   * Hashes data
   */
  // tslint:disable-next-line:max-line-length
  public web3_sha3: Web3Sha3 = (...params) => {
    return this.request("web3_sha3", params);
  }
  
  /**
   * returns listening status
   */
  // tslint:disable-next-line:max-line-length
  public net_listening: NetListening = (...params) => {
    return this.request("net_listening", params);
  }
  
  /**
   * number of peers
   */
  // tslint:disable-next-line:max-line-length
  public net_peerCount: NetPeerCount = (...params) => {
    return this.request("net_peerCount", params);
  }
  
  /**
   * Network identifier associated with network
   */
  // tslint:disable-next-line:max-line-length
  public net_version: NetVersion = (...params) => {
    return this.request("net_version", params);
  }
  
  /**
   * Returns a list of addresses owned by client.
   */
  // tslint:disable-next-line:max-line-length
  public eth_accounts: EthAccounts = (...params) => {
    return this.request("eth_accounts", params);
  }
  
  /**
   * Returns the number of most recent block.
   */
  // tslint:disable-next-line:max-line-length
  public eth_blockNumber: EthBlockNumber = (...params) => {
    return this.request("eth_blockNumber", params);
  }
  
  /**
   * Executes a new message call (locally) immediately without creating a transaction on the block chain.
   */
  // tslint:disable-next-line:max-line-length
  public eth_call: EthCall = (...params) => {
    return this.request("eth_call", params);
  }
  
  /**
   * Returns the currently configured chain id
   */
  // tslint:disable-next-line:max-line-length
  public eth_chainId: EthChainId = (...params) => {
    return this.request("eth_chainId", params);
  }
  
  /**
   * Returns the client coinbase address.
   */
  // tslint:disable-next-line:max-line-length
  public eth_coinbase: EthCoinbase = (...params) => {
    return this.request("eth_coinbase", params);
  }
  
  /**
   * Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The transaction will not be added to the blockchain. Note that the estimate may be significantly more than the amount of gas actually used by the transaction, for a variety of reasons including EVM mechanics and node performance.
   */
  // tslint:disable-next-line:max-line-length
  public eth_estimateGas: EthEstimateGas = (...params) => {
    return this.request("eth_estimateGas", params);
  }
  
  /**
   * Returns the current price per gas in wei
   */
  // tslint:disable-next-line:max-line-length
  public eth_gasPrice: EthGasPrice = (...params) => {
    return this.request("eth_gasPrice", params);
  }
  
  /**
   * Returns Ether balance of a given or account or contract
   */
  // tslint:disable-next-line:max-line-length
  public eth_getBalance: EthGetBalance = (...params) => {
    return this.request("eth_getBalance", params);
  }
  
  /**
   * Gets a block for a given hash
   */
  // tslint:disable-next-line:max-line-length
  public eth_getBlockByHash: EthGetBlockByHash = (...params) => {
    return this.request("eth_getBlockByHash", params);
  }
  
  /**
   * Gets a block for a given number
   */
  // tslint:disable-next-line:max-line-length
  public eth_getBlockByNumber: EthGetBlockByNumber = (...params) => {
    return this.request("eth_getBlockByNumber", params);
  }
  
  /**
   * Returns the number of transactions in a block from a block matching the given block hash.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getBlockTransactionCountByHash: EthGetBlockTransactionCountByHash = (...params) => {
    return this.request("eth_getBlockTransactionCountByHash", params);
  }
  
  /**
   * Returns the number of transactions in a block from a block matching the given block number.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getBlockTransactionCountByNumber: EthGetBlockTransactionCountByNumber = (...params) => {
    return this.request("eth_getBlockTransactionCountByNumber", params);
  }
  
  /**
   * Returns code at a given contract address
   */
  // tslint:disable-next-line:max-line-length
  public eth_getCode: EthGetCode = (...params) => {
    return this.request("eth_getCode", params);
  }
  
  /**
   * Returns raw transaction data of a transaction with the given hash.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getRawTransactionByHash: EthGetRawTransactionByHash = (...params) => {
    return this.request("eth_getRawTransactionByHash", params);
  }
  
  /**
   * Returns raw transaction data of a transaction with the block hash and index of which it was mined.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getRawTransactionByBlockHashAndIndex: EthGetRawTransactionByBlockHashAndIndex = (...params) => {
    return this.request("eth_getRawTransactionByBlockHashAndIndex", params);
  }
  
  /**
   * Returns raw transaction data of a transaction with the block number and index of which it was mined.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getRawTransactionByBlockNumberAndIndex: EthGetRawTransactionByBlockNumberAndIndex = (...params) => {
    return this.request("eth_getRawTransactionByBlockNumberAndIndex", params);
  }
  
  /**
   * Returns an array of all logs matching a given filter object.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getLogs: EthGetLogs = (...params) => {
    return this.request("eth_getLogs", params);
  }
  
  /**
   * Gets a storage value from a contract address, a position, and an optional blockNumber
   */
  // tslint:disable-next-line:max-line-length
  public eth_getStorageAt: EthGetStorageAt = (...params) => {
    return this.request("eth_getStorageAt", params);
  }
  
  /**
   * Returns the information about a transaction requested by the block hash and index of which it was mined.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionByBlockHashAndIndex: EthGetTransactionByBlockHashAndIndex = (...params) => {
    return this.request("eth_getTransactionByBlockHashAndIndex", params);
  }
  
  /**
   * Returns the information about a transaction requested by the block number and index of which it was mined.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionByBlockNumberAndIndex: EthGetTransactionByBlockNumberAndIndex = (...params) => {
    return this.request("eth_getTransactionByBlockNumberAndIndex", params);
  }
  
  /**
   * Returns the information about a transaction requested by the block number.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionsByBlockNumber: EthGetTransactionsByBlockNumber = (...params) => {
    return this.request("eth_getTransactionsByBlockNumber", params);
  }
  
  /**
   * Returns the receipt of a transaction by block number.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionReceiptsByBlockNumber: EthGetTransactionReceiptsByBlockNumber = (...params) => {
    return this.request("eth_getTransactionReceiptsByBlockNumber", params);
  }
  
  /**
   * Returns the information about a transaction requested by transaction hash.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionByHash: EthGetTransactionByHash = (...params) => {
    return this.request("eth_getTransactionByHash", params);
  }
  
  /**
   * Returns the receipt of a transaction by transaction hash.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionDataAndReceipt: EthGetTransactionDataAndReceipt = (...params) => {
    return this.request("eth_getTransactionDataAndReceipt", params);
  }
  
  /**
   * Returns the number of transactions sent from an address
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionCount: EthGetTransactionCount = (...params) => {
    return this.request("eth_getTransactionCount", params);
  }
  
  /**
   * Returns the receipt information of a transaction by its hash.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getTransactionReceipt: EthGetTransactionReceipt = (...params) => {
    return this.request("eth_getTransactionReceipt", params);
  }
  
  /**
   * Returns the account- and storage-values of the specified account including the Merkle-proof.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getProof: EthGetProof = (...params) => {
    return this.request("eth_getProof", params);
  }
  
  /**
   * Returns the number of hashes per second that the node is mining with.
   */
  // tslint:disable-next-line:max-line-length
  public eth_hashrate: EthHashrate = (...params) => {
    return this.request("eth_hashrate", params);
  }
  
  /**
   * Returns true if client is actively mining new blocks.
   */
  // tslint:disable-next-line:max-line-length
  public eth_mining: EthMining = (...params) => {
    return this.request("eth_mining", params);
  }
  
  /**
   * Creates a filter in the node, to notify when a new block arrives. To check if the state has changed, call eth_getFilterChanges.
   */
  // tslint:disable-next-line:max-line-length
  public eth_newBlockFilter: EthNewBlockFilter = (...params) => {
    return this.request("eth_newBlockFilter", params);
  }
  
  /**
   * Creates a filter object, based on filter options, to notify when the state changes (logs). To check if the state has changed, call eth_getFilterChanges.
   */
  // tslint:disable-next-line:max-line-length
  public eth_newFilter: EthNewFilter = (...params) => {
    return this.request("eth_newFilter", params);
  }
  
  /**
   * Polling method for a filter, which returns an array of logs which occurred since last poll.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getFilterChanges: EthGetFilterChanges = (...params) => {
    return this.request("eth_getFilterChanges", params);
  }
  
  /**
   * Returns an array of all logs matching filter with given id.
   */
  // tslint:disable-next-line:max-line-length
  public eth_getFilterLogs: EthGetFilterLogs = (...params) => {
    return this.request("eth_getFilterLogs", params);
  }
  
  /**
   * Uninstalls a filter with given id. Should always be called when watch is no longer needed. Additionally Filters timeout when they aren't requested with eth_getFilterChanges for a period of time.
   */
  // tslint:disable-next-line:max-line-length
  public eth_uninstallFilter: EthUninstallFilter = (...params) => {
    return this.request("eth_uninstallFilter", params);
  }
  
  /**
   * Creates a filter in the node, to notify when new pending transactions arrive. To check if the state has changed, call eth_getFilterChanges.
   */
  // tslint:disable-next-line:max-line-length
  public eth_newPendingTransactionFilter: EthNewPendingTransactionFilter = (...params) => {
    return this.request("eth_newPendingTransactionFilter", params);
  }
  
  /**
   * Returns the transactions that are pending in the transaction pool and have a from address that is one of the accounts this node manages.
   */
  // tslint:disable-next-line:max-line-length
  public eth_pendingTransactions: EthPendingTransactions = (...params) => {
    return this.request("eth_pendingTransactions", params);
  }
  
  /**
   * Returns an EIP-191 signature over the provided data.
   */
  // tslint:disable-next-line:max-line-length
  public eth_sign: EthSign = (...params) => {
    return this.request("eth_sign", params);
  }
  
  /**
   * Returns an RLP encoded transaction signed by the specified account.
   */
  // tslint:disable-next-line:max-line-length
  public eth_signTransaction: EthSignTransaction = (...params) => {
    return this.request("eth_signTransaction", params);
  }
  
  /**
   * Signs and submits a transaction.
   */
  // tslint:disable-next-line:max-line-length
  public eth_sendTransaction: EthSendTransaction = (...params) => {
    return this.request("eth_sendTransaction", params);
  }
  
  /**
   * Creates new message call transaction or a contract creation for signed transactions.
   */
  // tslint:disable-next-line:max-line-length
  public eth_sendRawTransaction: EthSendRawTransaction = (...params) => {
    return this.request("eth_sendRawTransaction", params);
  }
  
  /**
   * Returns an object with data about the sync status or false.
   */
  // tslint:disable-next-line:max-line-length
  public eth_syncing: EthSyncing = (...params) => {
    return this.request("eth_syncing", params);
  }
  
  /**
   * If successful this returns the subscription id. Subscriptions are creates with a regular RPC call with eth_subscribe as method and the subscription name as first parameter. 
   */
  // tslint:disable-next-line:max-line-length
  public eth_subscribe: EthSubscribe = (...params) => {
    return this.request("eth_subscribe", params);
  }
  
  /**
   * Subscriptions are cancelled with a regular RPC call with eth_unsubscribe as method and the subscription id as first parameter.
   */
  // tslint:disable-next-line:max-line-length
  public eth_unsubscribe: EthUnsubscribe = (...params) => {
    return this.request("eth_unsubscribe", params);
  }
  
}
export default BinanceSmartChainJSONRPCSpecification;
